{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["*","android","introduct","k个列表融合","lrucach","m","n孤岛","二分查找","二叉查找树","二叉树遍历","判断一个数字是不是2的幂","动态规划","堆排序","平衡二叉树","快排","收集常见面试题，以及解法以及简单的原理介绍。","算法","约瑟夫环","计算机基础","质数相关"],"algorithm/":["算法"],"algorithm/erfen.html":["&&","(end","(int","(j","(l","*","+","+=",",","//while","//直接平均可能会溢出，所以用这个算法","//递归版本","0","0;","0，","1","1);","1,","1.","11,","13,","13.","13],","15]","1;","1]","1][matrix[0].length","1。","2.","3.","4.","5","6.","8,","9],",";","=",">","@overrid","[","[1","[10,","[12,","],","a1","arr[],","binary_search(arr,","binary_search(const","class","compareto(tupl","count","element","end","end)","end,","for(int","hi","if(arr[mid]","if(count","if(start","int","j","k","k)","khey)","khey);","kthsmallest(int[][]","lo","matrix","matrix,","matrix.length;","matrix[0][0],","matrix[i][j]","matrix[matrix.length","matrix）","mid","mid)","mid;","n","new","n的矩阵，每一行每一列都是排好续的，从这个矩阵中找第k小的元素。","o(1)","o(logn)","pq","priorityqueu","priorityqueue();","public","r)／2","r,","r=n","return","search）","smallest","solut","sort","start","start)/2;","start,","that)","that.val;","this.i","this.val","this.x","tupl","val)","val;","while(lo","while(start","x,","x;","y,","y;","{","}","​","一个n","二分查找","二分查找（binari","令l","令m(中间值元素)为","使得","例如","则搜索失败","在一种有序数组中查找某一特定元素的搜索算法。搜索过程从数组的中间元素开始，如果中间元素正好是要查找的元素，则搜索过程结束；如果该特定元素大于或小于中间元素，则在数组大于或小于中间元素的那一半中查找，而且跟开始一样，从中间元素开始比较，如果在某一步骤数组为空，则代表找不到，这种搜索算法每次比较都使搜索范围缩小一半。","在有序矩阵中寻找第k小的元素","如果am=t，搜索结束。","如果amt，令r为m","如果l","并返回到步骤2","循环","时间复杂度","空间复杂度","算法步骤","给予一个包含n个带值元素的数组a","解法2，二分查找，由于这个矩阵两端排序，因此最小的元素是左上角的元素，最大的元素是右下角的元素。","说一个leetcode的问题吧：","这个矩阵有点像最小堆，那就先用堆的方法来解决一下，我们用优先级队列来构建堆。","（kth"],"algorithm/quicksort.html":["&&","&arr[range.end]);","&p)","(!t)","(index","(int","(left","(len","(start",")","*x","*x,","*x;","*y","*y)","*y;","+",",","0,","0;","1","1)","1);","1)／2)","1,","1;","=","==",">",">=",">>",">data.key)",">lchild,",">rchild,","_rang","a[i]","a[pivotindex]","a[right])","add","arr)","arr.length","arr;","arr[],","arr[end]);","arr[end];","arr[i]","arr[i];","arr[index])","arr[j]","arr[j];","arr[li])","arr[range.end])","arr[range.end];","beginindex","beginindex;","bitre","class","cmax","concatenate(quicksort(less),","conquer），把一个序列分成两个子序列","const","continue;","data.key)","e)","e;","end","end)","end);","end;","f,","f;","false;","for(int","form","function","greater","heapsort","heapsort(int[]","i);","i,","if(arr[cmax]","if(key","if(left)","if(len","if(ri","index);","index,","int","int[]","j)","key","key,","left","left++;","left,","len","len)","len);","len;","length(q)","less,","li","list","maxheapfiy(int","maxheapify(0,","maxheapify(cmax","maxheapify(i,","mid","new_range(int","new_range(left","new_range(range.start,","o(logn)","p","p);","partition(a,","pivot","pivotindex)","pivotlist","pivotlist,","pivotnewindex","pivotvalu","privat","public","quick_sort(int","quick_sort_recursive(arr,","quick_sort_recursive(int","quicksort(a,","quicksort(greater))","quicksort(q)","r.end","r.start","r;","r[p++]","rang","range.end","range.end)","range.end);","range.start,","range;","return","return;","ri;","right","right)","right,","s,","s;","search","searchbst(bitre","searchbst(t","select","sort()","start,","statu","storeindex","struct","swap(&arr[left],","swap(0,","swap(a[pivotindex],","swap(cmax,","swap(int","t","t,","t;","temp","temp;","this.arr","tree）是指，一颗空树或者具有下列性质的二叉树","true;","typedef","valu","var","void","x","{","}","​","—","二叉搜索树","二叉搜索树b中寻找x的过程为：","二叉搜索树（binari","二叉查找树","从数列中挑出一个元素，称为“基准（pivot）“。","代码实现","任意节点的左右子树也分别是二叉查找树；","伪代码","创建最大堆（build_max_heap）：将堆的所有数据重新排序；","图示","堆排序","堆排序（heapsort）","堆排序（heapsprt）：移除位在第一个数据的根结点，并做最大堆调整的递归算法；","堆节点的访问：","子结点i的父节点在位置floor((i","将堆的末端子结点做调整，使得子结点永远小于父节点；","建堆","快排","快排有两个竞争对手，分别是二叉搜索树和堆排序","快速排序","快速排序（quicksort），是一个典型的分治法（divid","是指利用堆这种数据结构所设计的一种排序算法。堆是一种近似于完全二叉树的数据结构，并且满足：子结点的键值或索引总是小于（或者大于）它的父节点","最大堆调整（max_heapify）:","查找右子树；","没有键值相等的节点。","父节点i的右子节点的位置在(2*i+2)","父节点i的左子节点的位置在（2*i","若b是空树，则搜索失败，否则；","若x小于b的根结点的值，则搜索左子树；否则；","若x等于b的根结点的值，则查找成功；否则；","若任意节点的右子树不空，则右子树所有节点的值均大于它的根节点的值；","若任意节点的左子树不空，则左子树所有节点的值均小于它的根节点的值；","还有一个原地分区版本，空间复杂度可以降低到","迭代法：","递归地把两个子序列排序。","递归法","通常堆是通过一维数组来实现的。","重新排序数列，所有比基准小的元素摆在基准前面，所有比基准值大的元素摆在基准后面。在这个分区结束之后，该基准就处于数列的中间位置。这个称为分区(partition)。"],"algorithm/binearysearch.html":["!=","!stack.empty())","(cur","(head","(int","+","//do","0,","0;","1","1;","=","=0;;level++)","==",">",">lchild);",">left;",">rchild",">rchild);",">right",">right;","arraylist();","arraylist<>();","arraylist>();","boolean","break;","cur","cur.left;","cur.right;","head","head++;","if(!printnodeatlevel(root,","if(root","if(tmp","in_order_traversal(root","in_order_traversal(treenode*","inordertraversal(treenod","int","last","layer_traver(tree*","lchild","left","level","level,","levelorder(treenod","levelorder2(treenod","list","list)","list))","list.add(cur.val);","list>","lists.add(list);","lists;","lsit;","math.max(left,","maxdepth(root.left);","maxdepth(root.right);","maxdepth(treenod","new","null","null)","order","p[head]","p[size]","p[tail]","post_order_traversal(root","post_order_traversal(treenode*","pre_order_traversal(root","pre_order_traversal(treenode*","printnodeatlevel(treenod","public","queue","queue.add(root);","rchild","return","return;","right","right);","root","root)","root,","root;","someth","stack","stack();","stack.add(cur);","stck.pop();","tail","tail++","tail++;","tmp","tmp;","traversal）","tree*","treenod","void","while(cur","{","{null};","||","}","​","不重复地访问某种树的所有节点的过程。","中序遍历（in","二叉树","二叉树层次遍历","二叉树遍历","二叉树遍历分两种","先序遍历（pre","先序遍历，中序遍历，后序遍历；","先访问子树，然后访问根的遍历方式","先访问左（右）子树，然后访问根，最后访问右（左）子树的遍历方式","先访问根，然后，访问子树的遍历方式","分层遍历二叉树","后序遍历（post","和深度优先遍历不同，广度优先遍历会先访问离根节点最近的节点。二叉树的广度优先遍历又称按层次遍历。借助队列实现","广度优先遍历","广度优先遍历：","深度优先遍历","深度优先遍历之"],"algorithm/balancebineary.html":["&height)","+","0)","0,","0;","1","1)","1;","2)","=","==",">",">left))",">left),",">left);",">left,",">right))",">right));",">right);",">right,","avltree>","avltreenod","avltreenode(key,","avltreenode(t","avltreenode>","avl树失衡","avl树，任何节点的两个子树的高度最大差别为1，所以，也称为高度平衡二叉树。查找，插入和删除在平均最坏的情况下都是o(log","bool","class","cmp","depth(root","depth(treenode*","depthleft","depthright","depthright)","false;","height","height(k1.right))","height(k2.right))","height(tree.left)","height;","if(!isbalance(root","if(!isbalanced(root","if(!root)","if(abs(depthleft","if(abs(left","if(cmp","if(height(tree.right)","if(key.compareto(tree.right.key)","if(root","if(tre","insert(avltreenod","insert(tree.right,","int","inverttree(root.left);","inverttree(root.right);","inverttree(treenod","isbalance(treenode*","isbalanced(treenode*","k1","k1)","k1.height","k1.height)","k1.right","k1.right;","k1;","k2","k2)","k2.height","k2.height)","k2.left","k2.left;","k2;","k3)","k3.left","key)","key);","key,","key.compareto(tree.key);","key;","left","left))","left,","left;","llrotation(avltreenod","llrotation(k1.right);","llrotation(k3);","ll左单旋转","ll，","lrrotation(avltreenod","lr旋转","lr，rr，rl。","max(depth(root","max(height(k1.left),","max(height(k2.left),","max(height(k2.right),","max(left,","mroot;","n)","new","null)","null);","null,","null;","privat","public","retrun","return","right","right)","right))","right;","rlrotation(avltreenod","rlrotation(tree);","rl旋转","root)","root,","root.left","root.left;","root.right","root.right;","root;","rrrotation(avltreenod","rrrotation(k1);","rrrotation(k3.left);","rrrotation(tree);","rr旋转","t","this.height","this.key","this.left","this.right","tmp","tmp;","tree","tree,","tree.right","tree;","treenod","true;","{","}","一定是","二叉树翻转","判断一个颗树是否是平衡二叉树","定义节点：","平衡二叉树","插入节点（建树）"],"algorithm/LRUCache.html":["!=","(node.next","+","0;","=","==",">=","caches","cachesize)","cachesize;","class","currents","currentsize++;","currentsize;","entri","entry();","first","first)","first.prev","first;","get(object","hashtabl","hashtable(i);","i)","i;","if(currents","if(first","if(last","if(last.prev","if(nod","if(node.next","if(node.prev","int","key)","key,","key;","last","last.prev.next","last.prev;","last;","lrucach","lrucache(int","movetohead(entri","movetohead(node);","new","next;","node","node)","node);","node.next","node.next.prev","node.next;","node.prev","node.prev.next","node.prev;","node.remove(last.key);","node.valu","node;","nodes.get(key);","nodes.put(key,","nodes.remove(key);","nodes;","null)","null;","object","prev;","privat","public","put(object","remove(object","removelast()","removelast();","return","return;","value)","value;","void","{","}","当一个位置被命中，通过调整链表指向，将该位置调整到链表头位置，新加入的直接放到链表头位置，这样，最近命中的，向链表头移动，没有命中的向链表后移动。","最近最久未使用，如果一个数据在最近一段时间没有被访问，那么在将来它被访问的可能性很小。","比较好的解决方案：双链表"],"algorithm/MNisland.html":["*","0","0,","0;","1,","=","==","[","]","boolean[][]","boolean[row][cols];","col","for(int","gird)","gird[0].length","grid","grid.length","grid.length;","grid[0].length;","if(grid.length","int","j","m","m*n的矩阵，1的周围如果都是0，那么我们说这个1是个孤岛","new","null)","numislands(char[][]","n孤岛","public","return","row","sum","visit","{","||","上面的矩阵存在两个孤岛","对于一个只有0，1组成的","矩阵孤岛问题"],"algorithm/2power.html":["!=","\"","\"count","\"currnum","\"factor","\"lowernum","%","%d","%d\"","%d)","&","'__main__':","(%d","((n/factor)","(currnum,","(highernum","(lowernum,","(n","(n/factor)%10","(n/factor)*factor","(precount,","*","+","0","0):","0:","1","1)","10","1:","=","==",">","__name__","bin(n)","c","c+1","c=0","count","count)","count=0","count_binary_one(n):","count_one(12013)","count_one(n):","currnum","currnum,","def","elif","else:","factor","factor,","highernum","highernum)","highernum,","lowernum","lowernum,","n","n/(factor*10)","precount","precount,","print","x&x","其实每次挪走了右边的1","判断一个数字是不是2的幂","很简单","求二进制中2的个数","衍生问题1","衍生问题2:","计算从0到n中包含数字1的个数：","运行结果："],"algorithm/primeNumber.html":["*","1","10","100","100，","10；","2","20，","25，","5","50，4","=","==","[]","boolean","def","eliminate(n):","exce","exceed):","fals","flag","flag.append(true)","flag[j]","i):","if(flag[i]","if(n","int(math.sqrt(n))","isprime(int","j","n)","n+1):","n+1,","print","range(0,","range(2,","range(i+i,","result","result.append(i)","true):","{","判断一个数是否是质数；","可以拆解为","各一个自然数n，打印出所有小于n的质数；","因为2是质数，因此可以把2的倍数全部去掉；","因为3是质数，因此可以把3的倍数全部去掉；","比如","筛除法:","给一个自然数n，打印出前n个质数；","继续最小的数是5，把5的倍数全部去掉，因此类推再把7的倍数全部去掉，这样不断筛除，最后剩下的全是素数；","质数的几个特点：除了2之外的质数一定是奇数，因为因数都是成对出现的","质数相关"],"algorithm/kListMerage.html":["!=","(min.next","0)","0;","1;",":","=","==","@overrid","class","comparator()","compare(listnod","dummi","for(listnod","head","head;","heap","heap.add(min.next);","heap.add(n);","heap.peek();","heap.poll();","if(lists.length","if(n","int","j","k个列表融合","k个有序列表融合成一个有序列表","listnod","listnode(0);","listnode(int","lists)","lists.length","lsits)","merag","mergeklist(listnode[]","mergeklists(listnode[]","min","min.next","n","new","next;","null)","null;","o1,","o1.val","o2)","o2.val;","priorityqueu","priorityqueue<>(new","public","return","sort","val;","while(!heap.isempty())","while(i","while(j","x)","x;}","{","{val","}","});","堆排序（priorityqueue）"],"algorithm/jospher.html":["%","(f(n","(s","+","0;","1)","1):","1个人，并且编号往后移动了m的游戏重新开始，因此可以得到","=","def","f(n)","josephus(n,","m)","m):","mod","n","n个人","print","range(2,","s","变成","围成一圈，然后依次报数，第m个人自杀，然后从下个人开始继续报数，第m个人自杀，最后谁会剩下？","简单解析：n个人死掉一个","约瑟夫环"],"algorithm/dynamic.html":["!=","&&","(i","(int",")","+","+1;","..","//定义d[i][j]","0","0)","0,","0.","0;","1","1)","1;","1]","1])","1],","1];","1][j","1][j])","1][substringlength2","1}","1背包问题；","2)","=","==","=v[i];",">",">0",">=","[0","a[0..i]","a[i]","array","b[0..j]的lcs，那么","b[j]);","char[]","class","compute(char[]","contain","dp[i","dp[i][j]","f[j","f[j]","f[totv]);","fib(n","fib(n)","for(int","function","i++;","if(map","if(size1","if(str1[i]","int","int[][]","int[substringlength1","j","j++;","j==0);","j>0","key","longest","longestcommonsubsequ","longestcommonsubstr","m","m[n]","map","math.max(opt[i+1][j],","max(dp[i][j","max(f[j],","n","n)","n]","new","opt","opt[0][0];","opt[i+1][j+1]","opt[i][j","opt[i][j+1]);","opt[i][j]","pi);","printf(\"%d\",","public","return","size1","size2","start1","start2","static","str1,","str1.length;","str2)","str2.length;","str2[j])","substringlength1","substringlength2","v[i]]","while(i","{","||","}","优化","例子:","划分后的阶段一定要是有序的或者是可排序的，否则问题就无法求解。","划分阶段：按照问题的时间或空间特征，把问题分为若干阶段。在划分时","动态规划","动态规划的过程：","动态规划问题的3个性质","如果不限定每种物品的数量，则问题称为无界背包问题；","如果限定每种物品只能选择0个或1个，则称为0","如果限定物品j最多只能选择bj个，则问题称为有界背包问题；","对每一个子问题求解，得到子问题的局部最优解；","寻找边界条件：给出的状态转移方程是一个递推式，需要一个递推的终止条件或边界条件。","并且","建立数学模型来描述问题；","把子问题的解局部最优解合成原来解问题的一个解；","把求解的问题分成若干子问题；","整数背包问题：设有n件物品，每件价值记为pi，每件体积记为vi，用一个最大容积为vmax的背包，求装入物品的最大价值。用一个数组f[i，j]表示取i件物品填充一个容积为j的背包的最大价值，那么这个问题的解就是f[n，vmax]","斐波那契数列","无后效性：某阶段的状态一旦确定，就不受这个状态以后的决策的影响；","最优化原理：如果问题的最优解包含的子问题的解也是最优的，那这个问题具有最优子结构，即满足最优化原理；","最长公共子串和最长公共子序列","最长公共子序列问题","最长公子串—要求子串一定连续","有重叠子问题：即子问题之间不独立，一个子问题在下一阶段决策中可能被多次使用到。","根据相邻两个阶段的状态之间的关系来确定决策方法和状态转移方程。","相关的算法的基本框架","确定决策并写出状态转移方程：因为决策和状态转移有天然的联系，状态转移就是根据上一阶段的状态和决策来导出本阶段的状态。","确定状态和状态变量：将问题发展到各个阶段时所处于的各种客观情况用不同的状态表示出来。","背包问题","贪心法","贪心法一般不能得到我们所要求的答案，一旦一个问题能通过贪心法来解决，那么贪心法一般是解决这个问题的最好办法。"],"algorithm/3Sum.html":["!=","&&","(int",")","+","0","0,","0;","0?","0，找到所有这样的唯一的组合。","1,","1])","1],","2,","2]","3sum","4],","=","[","]","a,","a,b,c","array","arrays.sort(nums);","b","b,","c","element","example,","find","give","given","hi","int","integers,","is:","linkedlist<>();","list>","lo","n","new","nums)","nums.length","nums[i","nums[i]","nums[i];","public","re","s","set","solut","such","sum","threesum(int[]","triplet","uniqu","while(lo","zero.","{","注意：结果集中不包含重复的。","给定的一个有n个整数的数据s，判断s中是否包含这样的元素"],"android/":["android"],"base/":["计算机基础"],"algorithm/Str2Int.html":["&&","'","//处理掉空格","//处理溢出","/10","0)","0,","0;","1,","2147483648)","9)","=","==","atoi函数，把一个字符串转成整数。","break;","if(integer.max_valu","if(str.length()","index","int","int_max(2147483647)","int_min(","integ","intger","myatoi(str","public","return","sign","str)","string","total","while(str.charat(index)","{","关键点：处理空格，确定正数还是负数，整型的最大和最小值"],"algorithm/divide2Int.html":["&&","((dividend","(dividend","(temp","0","0)","0;","1))","12","12再移位，就变成了24，这样子就比15大了，所以，15","15","1;","3","3，这时候","3，首先","6","9，","=","==",">=","divid","divide(int","dividend,","divisor","divisor)","divisorl)","divisorl,","if((dividend","if(dividend","if(divisor","int","integ","integer.max_value;","integer.min_valu","integer.min_value;","long","max_int","multipl","public","return","sign","temp","two","while(dividendl","{","||","不用传统的乘法，除法，取余操作，进行两个数的除法，如果溢出返回","再移位","变成6","和","左移一位","比如15","然后","然后剩余的3，再通过减法，把剩余的位不上，得到结果5，直接上代码比较好理解，一定要关注正负数问题。","然后，移位2次，得出结果4.","这时候3","除法的本质是减法。"],"algorithm/frac2dec.html":["!=","\"","\"\");","\"(\");","\"0\";","\"0.(6)\"","\"0.5\";","\"2\";","%=","(denomin","*=","/","//处理小数部分","//处理整数部分","0)","0))","1,","10;","2,","3,",":","=","==",">",">0)","?","^","break;","decim","den","den);","den;","denomin","denominator)","fraction","fractiontodecimal(int","given","hashmap","hashmap<>();","if(map.containskey(num))","if(num","if(numer","index","int","long","map","map.get(num);","map.put(num,","math.abs((long)denominator);","math.abs((long)numerator);","new","num","numer","numerator,","public","recur","res.append(\")\");","res.append(\".\");","res.append(((numer","res.append(num","res.insert(index,","res.length());","res.length);","res.tostring();","result","return","string","stringbuild","stringbuilder();","while(num","{","}","分子","分数转小数（字符串形式），输入","分步骤处理，先处理整数部分，再处理小数部分，通过map来记录循环。","分母，输出","小数字符串"],"algorithm/surroundedregion.html":["(j","+","0)","0;","1","1)","1,","1;","=","==",">","board)","board.length;","board[0].length;","check(board,","col","col);","for(i","i,","if(i","if(j","if(row","int","j","j,","j;","o","public","region","return;","row","row,","surround","surround(char[][]","void","x","x包围的o全部转成x","{","}","“o”，我们把被","一个2d的网格，包含“x”","例如","和","并查集","方法1，通过深度优先搜索","方法2","运行完成之后，转化成下面这个数组"],"algorithm/decodeways.html":["!=","\"12\"","\"12\",","\"ab\"","\"l\"","&&","'0'","'0')","'2'","'3')","'a'","'b'","'z'","(1","(12).","(int","(integer.parseint(s.substring(i,","(s.charat(i",")","+","...","0)","0;","1","1)","10","1;","1]","1];","2","2)","2))","26","2;","6)",":","=","==","==0)",">",">=","?","b","b;","c","c;","continue;","decod","dp","dp[0]","dp[1]","dp的解决方案，从后往前","fibonacci","first","if(","if(n==","if(s.charat(i","if(s.charat(i)","int","int[]","int[n+","int[n+1];","memo","memo[i]","memo[n","memo[n]","n","new","null","numdecoding(str","numdecodings(str","public","return","s)","s.charat(0)","s.charat(i","s.charat(i)","s.charat(n","s.length()","s.length();","s.length;","second","way","{","||","}","一条消息（message）按照下面的映射关系，采用数字的方式进行编码","从前往后的dp","有两种解码方案","比如：","的解码方案有\"2\"","种.","给出一条用数字编码过的消息，判断有多少种方式对他进行解码。"],"algorithm/largestNumber.html":["\"\";","\"0\";","'0')","(a*math.pow(10,","+","0)","0;","30,","34,","5,","9534330.","9],",":","=","==","@overrid","[3,","append(s);","arrays.sort(snums,","b)","comp","comp);","comparator()","compare(str","false;","for(int","for(n","for(str","if(num","if(snums[0].charat(0)","int","j)","largest","largestnumber(int[]","n","n;","new","null","number","nums)","nums.length","public","result","return","s","s,","s1","s2","s2.compareto(s1);","s;","sb.","sb.tostring();","snum","snums)","string","string[nums.length];","stringbuild","stringbuilder)0;","t1","t1)","t1;","{","||","}","};","一个不包含在负数的数组，找到他们排列组合出来的最大的数字。","排序","最大的数字组合是","比如","自定义排序"],"algorithm/validatebinarysearchtree.html":["!=","!stack.empty())","!stack.isempty())","&&","0)","=","==",">=","arraylist<>();","binari","boolean","break;","bst","element","if(","if(pr","if(root","if(root.v","inord","inordertraversal(treenod","int","isvalidbst(root,","isvalidbst(treenod","k","k)","kth","kthsmallest(treenod","list","list.add(root.val);","list;","long","long.max_value);","long.min_value,","maxval","maxval)","minval,","new","null","null)","null;","pre","public","return","root","root)","root,","root.left;","root.right;","root.val","root.val;","search","smallest","stack","stack.pop();","stack.push(root);","stack<>();","travers","tree","treenod","true;","valid","while(root","{","||","}","判断一棵树，是不是二叉查找树","延伸问题","树的前序遍历"],"algorithm/longestsubstringwithoutrepeatingchar.html":["\"abc\",","\"abcabcbb\",","\"b\",","\"bbbbb\",","\"pwwkew\",","\"wke\",","(j","0,","0;","1.","3.","=","an","answer","charact","for(int","given","hashmap<>();","hashset<>();","index","int","int[256];","int[]","j","length","lengthoflongestsubstring(str","longest","map","max","n","new","public","repeat","s)","s.length(),","set","substr","without","{","优化，通过一个map来记录慢指针最后出现的位置，这样子，就不用一个一个的淘汰了。直接把重复的字符前面的全部扔掉了，两套代码如下","双指针配合set，快指针用来判断最长字符串的末尾，慢指针用来找到重复的字符串，并且丢掉重复字符串前面的所有字符。","比如：","没有重复字符的最长子字符串的大小。","给定一个字符串，找到"],"algorithm/longestpalindromicsubstring.html":["longest","palindrom","substr"],"algorithm/shortestPalindrome.html":["palindrom","shortest"]},"length":26},"tokenStore":{"root":{"0":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.08108108108108109},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.026737967914438502},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.019455252918287938},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.020833333333333332},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.04054054054054054},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.023346303501945526},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.04878048780487805},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.018018018018018018},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.04419889502762431},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.01818181818181818},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.04950495049504951}}},"，":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}}}}}}}}}}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.14864864864864866},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.020833333333333332},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.039603960396039604}}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.018691588785046728},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.023255813953488372},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}},":":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},")":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}},":":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0106951871657754}}},".":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"?":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}},"1":{"0":{"0":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}},"，":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}},"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},"；":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}},"1":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"2":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.046511627906976744}},"再":{"docs":{},"移":{"docs":{},"位":{"docs":{},"，":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"2":{"4":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"子":{"docs":{},"就":{"docs":{},"比":{"1":{"5":{"docs":{},"大":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"1":{"5":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"3":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},".":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"]":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}},"5":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.03488372093023256}},"]":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0213903743315508},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.011673151750972763},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.022099447513812154}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0213903743315508},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.036036036036036036},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.022099447513812154}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00954653937947494}}},"／":{"2":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"docs":{}},":":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}},")":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.023255813953488372}}}},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.06756756756756757},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.08333333333333333},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.036036036036036036}}},".":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.017391304347826087},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00954653937947494},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.016025641025641024},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.019455252918287938},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}}},"]":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}},"docs":{}}}}}}}},"j":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},"]":{"docs":{},")":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"docs":{}}}}}}}}}}}}}}}}},")":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}},",":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"。":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},":":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},"个":{"docs":{},"人":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"编":{"docs":{},"号":{"docs":{},"往":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"了":{"docs":{},"m":{"docs":{},"的":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"重":{"docs":{},"新":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}},"2":{"0":{"docs":{},"，":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}},"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"8":{"docs":{},")":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{},"，":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}},"6":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}},"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},".":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0053475935828877}}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},",":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.023255813953488372}}},"]":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}},";":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}}}},"3":{"0":{"docs":{},",":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"4":{"docs":{},",":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}},".":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.019801980198019802}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":10.020833333333334}}}}},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}},"首":{"docs":{},"先":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}},",":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}},"4":{"docs":{},".":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"]":{"docs":{},",":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}},"5":{"0":{"docs":{},"，":{"4":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}},"docs":{}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}},",":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"6":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.023255813953488372}},".":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"8":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"9":{"5":{"3":{"4":{"3":{"3":{"0":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.009345794392523364}},".":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"]":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},")":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}},"，":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}},"docs":{},"*":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":3.3468468468468466},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0374331550802139},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}},"x":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}},"y":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}},"=":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}},"*":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.008928571428571428}}}},"a":{"1":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"docs":{},"n":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.019801980198019802}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.05},"android/":{"ref":"android/","tf":11}}}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0297029702970297}}}}}}},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}},"i":{"docs":{},"]":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}},"j":{"docs":{},"]":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"l":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}},"a":{"docs":{},"y":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.03125}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}}},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}},"d":{"docs":{},"d":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}},"v":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},">":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.038461538461538464}},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},">":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}},"树":{"docs":{},"失":{"docs":{},"衡":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},"，":{"docs":{},"任":{"docs":{},"何":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"最":{"docs":{},"大":{"docs":{},"差":{"docs":{},"别":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"也":{"docs":{},"称":{"docs":{},"为":{"docs":{},"高":{"docs":{},"度":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"在":{"docs":{},"平":{"docs":{},"均":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}},"b":{"docs":{},",":{"docs":{},"c":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}},"s":{"docs":{},"k":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"转":{"docs":{},"成":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.09565217391304348},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.0477326968973747},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0189873417721519},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.022435897435897436},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.05405405405405406},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.037383177570093455},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.038910505836575876},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.04878048780487805},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.03488372093023256},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.02702702702702703},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.03314917127071823},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.01818181818181818},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.01098901098901099},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0594059405940594}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10.05}}}}}}}},"[":{"2":{"5":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}},"docs":{}},"docs":{}},"docs":{},"]":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}},"[":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"1":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"docs":{}}}}}}}}}}}}}}}},"n":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},";":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}},"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":3.3565891472868215}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}},".":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.023255813953488372}},"e":{"docs":{},";":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":5.024390243902439}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"2":{"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"7":{"docs":{},")":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.04878048780487805},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}},")":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.05263157894736842}}}}}},"f":{"docs":{},"(":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}}}}},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"]":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}},"m":{"docs":{},"p":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}},"r":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"1":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"docs":{}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"n":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.017167381974248927}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.03481012658227848},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}},".":{"docs":{},"v":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}},"w":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}},"!":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}}}}}}},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}},"r":{"docs":{},"e":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.03278688524590164}}}}}}}}},"n":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}},"o":{"docs":{},"d":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.017167381974248927}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},"e":{"docs":{},"r":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}},"=":{"docs":{},"=":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}},"j":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}},"p":{"docs":{},"r":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}},")":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},":":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.02702702702702703}}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}},":":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}}}}}}}}}}}}}}}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"t":{"docs":{},".":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}}}}},"k":{"1":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}}}}}}}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616}}}},"2":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}}}}}}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616}}}},"3":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}},"个":{"docs":{},"列":{"docs":{},"表":{"docs":{},"融":{"docs":{},"合":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":10.009345794392523}}}}}},"有":{"docs":{},"序":{"docs":{},"列":{"docs":{},"表":{"docs":{},"融":{"docs":{},"合":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"列":{"docs":{},"表":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}}}}}}},")":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}},"h":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.017391304347826087}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}},"t":{"docs":{},"h":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"y":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":10.008583690987125}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},"，":{"docs":{},"r":{"docs":{},"r":{"docs":{},"，":{"docs":{},"r":{"docs":{},"l":{"docs":{},"。":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}},"o":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.016042780748663103}},",":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}},"n":{"docs":{},"g":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.01098901098901099}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":2.01980198019802},"algorithm/longestpalindromicsubstring.html":{"ref":"algorithm/longestpalindromicsubstring.html","tf":3.6666666666666665}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"t":{"docs":{},"r":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.02386634844868735},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},")":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}}}}},"n":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00954653937947494}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0297029702970297}},"(":{"docs":{},"q":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0297029702970297}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}},",":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}},"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}}}}}}},"i":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},"s":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.03164556962025317},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}},")":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},")":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}},">":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.012658227848101266},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.020833333333333332}}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595}}},")":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.018691588785046728}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.07476635514018691}},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}},";":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.01098901098901099}}}}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.017167381974248927}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"*":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":5.0181818181818185}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}},"s":{"docs":{},")":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}},"k":{"1":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"docs":{}}}}}}}}}}},"左":{"docs":{},"单":{"docs":{},"旋":{"docs":{},"转":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}},"，":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"m":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":3.3468468468468466},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}},"docs":{}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}},"）":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}},"docs":{}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"i":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}},"docs":{}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}},"f":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}},")":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}},"p":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.019801980198019802}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}}}}}}}}},"i":{"docs":{},"d":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.013043478260869565},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00954653937947494}},")":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}}},"n":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463}}}}}}}}}}}}}}}}},"d":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}},"*":{"docs":{},"n":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"1":{"docs":{},"的":{"docs":{},"周":{"docs":{},"围":{"docs":{},"如":{"docs":{},"果":{"docs":{},"都":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"说":{"docs":{},"这":{"docs":{},"个":{"1":{"docs":{},"是":{"docs":{},"个":{"docs":{},"孤":{"docs":{},"岛":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}},"g":{"docs":{},"e":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"n":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},"]":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0053475935828877}}}}}}},")":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.06060606060606061}},":":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}},"y":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}},"n":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0213903743315508},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.09090909090909091},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.011673151750972763},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.016574585635359115},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.019801980198019802}},"孤":{"docs":{},"岛":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":3.3468468468468466}}}},"e":{"docs":{},"w":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.022151898734177215},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.018691588785046728},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.02727272727272727},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.02197802197802198},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0297029702970297}},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"每":{"docs":{},"一":{"docs":{},"列":{"docs":{},"都":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"续":{"docs":{},"的":{"docs":{},"，":{"docs":{},"从":{"docs":{},"这":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"找":{"docs":{},"第":{"docs":{},"k":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.02197802197802198}},")":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0379746835443038},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.04721030042918455},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.018691588785046728},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.03296703296703297}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.017167381974248927},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}},"m":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.031007751937984496}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.01818181818181818}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}},"[":{"docs":{},"i":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}},"]":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}},";":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}},"e":{"docs":{},"r":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.023255813953488372}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0053475935828877},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":5.0181818181818185}}}}}}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.02145922746781116}},")":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.017167381974248927}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463}}}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.012875536480686695}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463}}}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.017167381974248927}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.012875536480686695}}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.012875536480686695}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}},"t":{"docs":{},"e":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009345794392523364}},"s":{"docs":{},":":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}},"/":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"1":{"0":{"docs":{},")":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}},"docs":{}},"docs":{}}}}}}}}}},"+":{"1":{"docs":{},")":{"docs":{},":":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.03278688524590164}}}},",":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}},"docs":{}},"个":{"docs":{},"人":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":10.004347826086956}},"（":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}},"叉":{"docs":{},"查":{"docs":{},"找":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":3.3357199681782017}}}}},"树":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},"遍":{"docs":{},"历":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":10.003164556962025}},"分":{"docs":{},"两":{"docs":{},"种":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}},"翻":{"docs":{},"转":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},"b":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"x":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"为":{"docs":{},"：":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}},"（":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"2":{"docs":{},"的":{"docs":{},"幂":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":10.005347593582888}}}}},"docs":{}}}}},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"质":{"docs":{},"数":{"docs":{},"；":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}},"颗":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}},"棵":{"docs":{},"树":{"docs":{},"，":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"查":{"docs":{},"找":{"docs":{},"树":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":10.003891050583658}},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"：":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}},"问":{"docs":{},"题":{"docs":{},"的":{"3":{"docs":{},"个":{"docs":{},"性":{"docs":{},"质":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}},"docs":{}}}}}}}},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":3.340493237867939}},"（":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"）":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"p":{"docs":{},"r":{"docs":{},"t":{"docs":{},"）":{"docs":{},"：":{"docs":{},"移":{"docs":{},"除":{"docs":{},"位":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"做":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"调":{"docs":{},"整":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"算":{"docs":{},"法":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"：":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":10.006410256410257}}}}}}},"快":{"docs":{},"排":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":3.3357199681782017}},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"对":{"docs":{},"手":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"和":{"docs":{},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},"（":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"）":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"分":{"docs":{},"治":{"docs":{},"法":{"docs":{},"（":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"收":{"docs":{},"集":{"docs":{},"常":{"docs":{},"见":{"docs":{},"面":{"docs":{},"试":{"docs":{},"题":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"解":{"docs":{},"法":{"docs":{},"以":{"docs":{},"及":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/":{"ref":"algorithm/","tf":11}},"步":{"docs":{},"骤":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}},"约":{"docs":{},"瑟":{"docs":{},"夫":{"docs":{},"环":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":10.030303030303031}}}}}},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"基":{"docs":{},"础":{"docs":{"./":{"ref":"./","tf":0.05},"base/":{"ref":"base/","tf":11}}}}},"从":{"0":{"docs":{},"到":{"docs":{},"n":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"数":{"docs":{},"字":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"：":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}},"docs":{}}}}}}}}},"docs":{}}}},"质":{"docs":{},"数":{"docs":{},"相":{"docs":{},"关":{"docs":{"./":{"ref":"./","tf":0.05},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":10.01639344262295}}}},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"特":{"docs":{},"点":{"docs":{},"：":{"docs":{},"除":{"docs":{},"了":{"2":{"docs":{},"之":{"docs":{},"外":{"docs":{},"的":{"docs":{},"质":{"docs":{},"数":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"因":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"成":{"docs":{},"对":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"&":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}},"&":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.01556420233463035},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.023255813953488372},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.016574585635359115},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}},"p":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}},"(":{"1":{"2":{"docs":{},")":{"docs":{},".":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}},"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}},"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}},"i":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.011673151750972763}},"n":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"e":{"docs":{},",":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}},"j":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}},"l":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}},"n":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}}},"!":{"docs":{},"t":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"s":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}}},"n":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}},"/":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},"%":{"1":{"0":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},"docs":{}},"docs":{}},"*":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}}}}}}}}}},"%":{"docs":{},"d":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0213903743315508}}}},"(":{"docs":{},"n":{"docs":{},"/":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0106951871657754}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}},"a":{"docs":{},"*":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"1":{"0":{"docs":{},",":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"+":{"1":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.017391304347826087},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00954653937947494},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.019230769230769232},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.06417112299465241},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.09090909090909091},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.027237354085603113},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.052083333333333336},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.02727272727272727}},"=":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"/":{"1":{"0":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}},"docs":{}},"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248}},"/":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}},"直":{"docs":{},"接":{"docs":{},"平":{"docs":{},"均":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"版":{"docs":{},"本":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}},"d":{"docs":{},"o":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0189873417721519}}}},"定":{"docs":{},"义":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"掉":{"docs":{},"空":{"docs":{},"格":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}},"溢":{"docs":{},"出":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}},"小":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}},"整":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"=":{"0":{"docs":{},";":{"docs":{},";":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"+":{"docs":{},"+":{"docs":{},")":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.06086956521739131},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.08591885441527446},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.06645569620253164},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.09935897435897435},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.0944206008583691},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.0945945945945946},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.09090909090909091},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.06557377049180328},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.07476635514018691},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.09090909090909091},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.10116731517509728},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.08333333333333333},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.07317073170731707},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.08139534883720931},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.08527131782945736},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.04504504504504504},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.09944751381215469},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.06363636363636363},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.07142857142857142},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.13861386138613863}},"=":{"0":{"docs":{},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.012658227848101266},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.030042918454935622},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.04054054054054054},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0213903743315508},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.03278688524590164},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.01556420233463035},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.04878048780487805},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.06976744186046512},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.027624309392265192},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.02727272727272727},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.02197802197802198}}},"v":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}},">":{"0":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}},")":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.017391304347826087},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0189873417721519},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.011673151750972763},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.027624309392265192}},"=":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}},">":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}},")":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}},")":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}}},"[":{"0":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"1":{"0":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"2":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"3":{"docs":{},",":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.041666666666666664}},"]":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.03278688524590164}}}},"]":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"b":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.020833333333333332},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}}}}}}}}}}}}}}},"i":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":2.521978021978022}}}}},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}},"e":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}},":":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.008695652173913044}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.008695652173913044}},")":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}}}}}}}},"docs":{}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},"j":{"docs":{},"]":{"docs":{},"的":{"docs":{},"l":{"docs":{},"c":{"docs":{},"s":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}},"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}}}},",":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}},";":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.016574585635359115}}},")":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.01818181818181818}}},"s":{"docs":{},"t":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}},"c":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0106951871657754},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.03125},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.058823529411764705}},")":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.016042780748663103}}},"=":{"0":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},"docs":{}},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},":":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"1":{"2":{"0":{"1":{"3":{"docs":{},")":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"n":{"docs":{},")":{"docs":{},":":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{},"，":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"i":{"docs":{},"d":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.00975609756097561}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}},"l":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.018018018018018018}},")":{"docs":{},";":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.036036036036036036}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"p":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},"u":{"docs":{},"r":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.015822784810126583}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.026737967914438502}},",":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.02631578947368421}}}}}}},"+":{"1":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},"docs":{}},"=":{"0":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},"docs":{}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":2.01980198019802}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.036036036036036036}}}}}}}}}}}}},";":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}},"i":{"docs":{},"f":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},":":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}},"n":{"docs":{},"d":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},")":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.03862660944206009}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0053475935828877}}}}}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},":":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.008695652173913044},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0053475935828877}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.018018018018018018}},"n":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.019801980198019802}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}},"n":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}},"m":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}}}}}}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}},"e":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.019230769230769232},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0374331550802139}},",":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.016042780748663103}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},",":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.008695652173913044}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.012875536480686695},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},")":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.012875536480686695}}}}}},"b":{"docs":{},"(":{"docs":{},"n":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.01556420233463035}},")":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}},"n":{"docs":{},"d":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}}}}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}}},"[":{"docs":{},"j":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"v":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":3.3488372093023253}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.026737967914438502}},")":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},",":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.016042780748663103}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}}},"n":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.018691588785046728}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}},";":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}},"(":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}},"docs":{}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}}}}}}},"j":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.013043478260869565},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.023346303501945526},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.018018018018018018},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.04950495049504951}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},",":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"docs":{}}},">":{"0":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"docs":{}},",":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.018018018018018018}}},";":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}},"o":{"1":{"docs":{},",":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}},"2":{"docs":{},")":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}},"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.04504504504504504}},"(":{"1":{"docs":{},")":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.012875536480686695}}}}}}},"p":{"docs":{},"t":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"docs":{}}}},"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}},"docs":{}}}}}},"docs":{}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},"+":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}},"docs":{}},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}}}}}}}},"p":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}},"q":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.019230769230769232},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.030042918454935622}}}}},"n":{"docs":{},"t":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0427807486631016},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"%":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}},"e":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}},",":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.02608695652173913},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.015822784810126583},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.02145922746781116},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.037383177570093455},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.01556420233463035},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.016574585635359115},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.02727272727272727},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.027472527472527472},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0297029702970297}}}}}},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}},")":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"algorithm/longestpalindromicsubstring.html":{"ref":"algorithm/longestpalindromicsubstring.html","tf":3.6666666666666665},"algorithm/shortestPalindrome.html":{"ref":"algorithm/shortestPalindrome.html","tf":5.5}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}},")":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"[":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"]":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.012658227848101266}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"]":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.02631578947368421}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}},"r":{"docs":{},")":{"docs":{},"／":{"2":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"docs":{}}},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"=":{"docs":{},"n":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"e":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.02608695652173913},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.014319809069212411},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0189873417721519},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.057692307692307696},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.028037383177570093},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.019455252918287938},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.03488372093023256},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.046511627906976744},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.022099447513812154},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.05454545454545454},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.03296703296703297}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.03278688524590164},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},")":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":3.3488372093023253}}}}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":5.018018018018018}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":2.01980198019802}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}},"[":{"docs":{},"p":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"(":{"0":{"docs":{},",":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}},"2":{"docs":{},",":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.03278688524590164},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}},"docs":{},"i":{"docs":{},"+":{"docs":{},"i":{"docs":{},",":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}},"i":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616}},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.04395604395604396}},")":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.02531645569620253},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}}},",":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.01098901098901099}}},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.01098901098901099}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.01098901098901099}},";":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}},"w":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.018018018018018018}},",":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.036036036036036036}}}}},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}},"k":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"3":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}},"docs":{}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"u":{"docs":{},"n":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.008695652173913044}}}}},"s":{"1":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}},"2":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}},"docs":{}}}}}}}}}}}}}},"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.09090909090909091},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.03125},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.01818181818181818}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":2.5164835164835164}},"）":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"t":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.019801980198019802}}},"e":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}},"r":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}},"(":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0189873417721519}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"2":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}},")":{"docs":{},"/":{"2":{"docs":{},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"docs":{}}},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.013043478260869565},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00954653937947494}}}}},"t":{"docs":{},"u":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"i":{"docs":{},"c":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}},"c":{"docs":{},"k":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.03296703296703297}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.016483516483516484}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}},"r":{"1":{"docs":{},",":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}}}}}}}},"2":{"docs":{},")":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}}}}}}}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}},"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":5.048780487804878},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.05454545454545454}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}},")":{"0":{"docs":{},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"docs":{}}}}}}}}},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}},")":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"docs":{},"&":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}},"a":{"docs":{},"[":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206}}}}}}}}},"u":{"docs":{},"m":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.020833333333333332}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":2.01980198019802},"algorithm/longestpalindromicsubstring.html":{"ref":"algorithm/longestpalindromicsubstring.html","tf":3.6666666666666665}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"1":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.011673151750972763}}},"2":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"docs":{}}}}}}},",":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009345794392523364}}},".":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009345794392523364}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009345794392523364}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":5.018018018018018}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"1":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"2":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}}},"docs":{}}},"g":{"docs":{},"n":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}}},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.016574585635359115},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0297029702970297}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"docs":{},"i":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"n":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}},";":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}},",":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.019801980198019802}}}}},";":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}}},"b":{"docs":{},".":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},"s":{"docs":{},")":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/shortestPalindrome.html":{"ref":"algorithm/shortestPalindrome.html","tf":5.5}}}}}}}}}},"t":{"1":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},")":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}}}},"x":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206}}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":2.521978021978022}},"）":{"docs":{},"是":{"docs":{},"指":{"docs":{},"，":{"docs":{},"一":{"docs":{},"颗":{"docs":{},"空":{"docs":{},"树":{"docs":{},"或":{"docs":{},"者":{"docs":{},"具":{"docs":{},"有":{"docs":{},"下":{"docs":{},"列":{"docs":{},"性":{"docs":{},"质":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.00641025641025641},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}},",":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}},";":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.01282051282051282},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.01098901098901099}}},")":{"docs":{},":":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.03278688524590164}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}},"a":{"docs":{},"l":{"docs":{},"）":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},"+":{"docs":{},"+":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633}}}}}}}},"m":{"docs":{},"p":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}}}}}},"w":{"docs":{},"o":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":3.3565891472868215}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}},"u":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}},"e":{"docs":{},")":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}},";":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.008583690987124463}}}}},"i":{"docs":{},"d":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":2.5164835164835164}}}}},"r":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"g":{"docs":{},"u":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.01909307875894988},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.012658227848101266},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.017167381974248927},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595}}}}},"!":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}},"i":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"j":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.03296703296703297}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}},"y":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":5.011049723756906}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":2.01980198019802}}}}}}}}},"x":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.24324324324324326}},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}},"}":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}},"&":{"docs":{},"x":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}},")":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}},"包":{"docs":{},"围":{"docs":{},"的":{"docs":{},"o":{"docs":{},"全":{"docs":{},"部":{"docs":{},"转":{"docs":{},"成":{"docs":{},"x":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}}}}}}}},"y":{"docs":{},",":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.008695652173913044}}},";":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}}}}},"{":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.043478260869565216},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.045346062052505964},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.056962025316455694},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.05448717948717949},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.08583690987124463},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.09345794392523364},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.03501945525291829},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.020833333333333332},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.023255813953488372},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.03875968992248062},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.018018018018018018},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.03867403314917127},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.05454545454545454},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.06043956043956044},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0297029702970297}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"}":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}},"}":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.030434782608695653},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.050119331742243436},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.05379746835443038},"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.05448717948717949},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.08583690987124463},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.06542056074766354},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.027237354085603113},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.03875968992248062},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.02702702702702703},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.03314917127071823},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.03636363636363636},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.04395604395604396}},")":{"docs":{},";":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"​":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206},"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.012658227848101266}}},"一":{"docs":{},"个":{"2":{"docs":{},"d":{"docs":{},"的":{"docs":{},"网":{"docs":{},"格":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"“":{"docs":{},"x":{"docs":{},"”":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}}}}}}}}},"docs":{},"n":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{},"负":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"他":{"docs":{},"们":{"docs":{},"排":{"docs":{},"列":{"docs":{},"组":{"docs":{},"合":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"是":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}},"条":{"docs":{},"消":{"docs":{},"息":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"）":{"docs":{},"按":{"docs":{},"照":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"采":{"docs":{},"用":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"编":{"docs":{},"码":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"令":{"docs":{},"l":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"m":{"docs":{},"(":{"docs":{},"中":{"docs":{},"间":{"docs":{},"值":{"docs":{},"元":{"docs":{},"素":{"docs":{},")":{"docs":{},"为":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}},"使":{"docs":{},"得":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"例":{"docs":{},"如":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}},"子":{"docs":{},":":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}},"则":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"失":{"docs":{},"败":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}},"在":{"docs":{},"一":{"docs":{},"种":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"某":{"docs":{},"一":{"docs":{},"特":{"docs":{},"定":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"过":{"docs":{},"程":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"中":{"docs":{},"间":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"中":{"docs":{},"间":{"docs":{},"元":{"docs":{},"素":{"docs":{},"正":{"docs":{},"好":{"docs":{},"是":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"过":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"特":{"docs":{},"定":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"于":{"docs":{},"或":{"docs":{},"小":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"大":{"docs":{},"于":{"docs":{},"或":{"docs":{},"小":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"半":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"跟":{"docs":{},"开":{"docs":{},"始":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"从":{"docs":{},"中":{"docs":{},"间":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"某":{"docs":{},"一":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"数":{"docs":{},"组":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"代":{"docs":{},"表":{"docs":{},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"算":{"docs":{},"法":{"docs":{},"每":{"docs":{},"次":{"docs":{},"比":{"docs":{},"较":{"docs":{},"都":{"docs":{},"使":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"范":{"docs":{},"围":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"一":{"docs":{},"半":{"docs":{},"。":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"序":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"第":{"docs":{},"k":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"a":{"docs":{},"m":{"docs":{},"=":{"docs":{},"t":{"docs":{},"，":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}},"t":{"docs":{},"，":{"docs":{},"令":{"docs":{},"r":{"docs":{},"为":{"docs":{},"m":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}},"l":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"不":{"docs":{},"限":{"docs":{},"定":{"docs":{},"每":{"docs":{},"种":{"docs":{},"物":{"docs":{},"品":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"则":{"docs":{},"问":{"docs":{},"题":{"docs":{},"称":{"docs":{},"为":{"docs":{},"无":{"docs":{},"界":{"docs":{},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}},"限":{"docs":{},"定":{"docs":{},"每":{"docs":{},"种":{"docs":{},"物":{"docs":{},"品":{"docs":{},"只":{"docs":{},"能":{"docs":{},"选":{"docs":{},"择":{"0":{"docs":{},"个":{"docs":{},"或":{"1":{"docs":{},"个":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"为":{"0":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}}}}}}},"物":{"docs":{},"品":{"docs":{},"j":{"docs":{},"最":{"docs":{},"多":{"docs":{},"只":{"docs":{},"能":{"docs":{},"选":{"docs":{},"择":{"docs":{},"b":{"docs":{},"j":{"docs":{},"个":{"docs":{},"，":{"docs":{},"则":{"docs":{},"问":{"docs":{},"题":{"docs":{},"称":{"docs":{},"为":{"docs":{},"有":{"docs":{},"界":{"docs":{},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"到":{"docs":{},"步":{"docs":{},"骤":{"2":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}},"docs":{}}}}}},"且":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}},"查":{"docs":{},"集":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}},"循":{"docs":{},"环":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}},"给":{"docs":{},"予":{"docs":{},"一":{"docs":{},"个":{"docs":{},"包":{"docs":{},"含":{"docs":{},"n":{"docs":{},"个":{"docs":{},"带":{"docs":{},"值":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"a":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"然":{"docs":{},"数":{"docs":{},"n":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"前":{"docs":{},"n":{"docs":{},"个":{"docs":{},"质":{"docs":{},"数":{"docs":{},"；":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}},"定":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"n":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"s":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"s":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"包":{"docs":{},"含":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}}}},"出":{"docs":{},"一":{"docs":{},"条":{"docs":{},"用":{"docs":{},"数":{"docs":{},"字":{"docs":{},"编":{"docs":{},"码":{"docs":{},"过":{"docs":{},"的":{"docs":{},"消":{"docs":{},"息":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"对":{"docs":{},"他":{"docs":{},"进":{"docs":{},"行":{"docs":{},"解":{"docs":{},"码":{"docs":{},"。":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"法":{"2":{"docs":{},"，":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"两":{"docs":{},"端":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"左":{"docs":{},"上":{"docs":{},"角":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"说":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"吧":{"docs":{},"：":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"有":{"docs":{},"点":{"docs":{},"像":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"先":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"构":{"docs":{},"建":{"docs":{},"堆":{"docs":{},"。":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"3":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}},"docs":{}}}},"（":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/erfen.html":{"ref":"algorithm/erfen.html","tf":0.004347826086956522}}}}}},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.011673151750972763},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.009615384615384616}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}},")":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}}},"f":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0106951871657754},"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":3.3488372093023253}}}},"o":{"docs":{},"d":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":5.011049723756906}}}}},"n":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248}}}},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248}}},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.023255813953488372}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364}}}}}},"p":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},"[":{"0":{"docs":{},"]":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"1":{"docs":{},"]":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"docs":{},"i":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.007782101167315175}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"从":{"docs":{},"后":{"docs":{},"往":{"docs":{},"前":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":3.3565891472868215}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.023255813953488372}},")":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}},"l":{"docs":{},")":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}},",":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}}},"i":{"docs":{},"d":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}},";":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}}}}}}}},"docs":{}}}}},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.02702702702702703}}}}}}}}}}},"docs":{}}}},"v":{"docs":{},"e":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}},"n":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.020833333333333332},"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.023255813953488372},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0053475935828877},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.009345794392523364},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.0297029702970297}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.00477326968973747}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}},"q":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}},"—":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"从":{"docs":{},"数":{"docs":{},"列":{"docs":{},"中":{"docs":{},"挑":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"“":{"docs":{},"基":{"docs":{},"准":{"docs":{},"（":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"）":{"docs":{},"“":{"docs":{},"。":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"往":{"docs":{},"后":{"docs":{},"的":{"docs":{},"d":{"docs":{},"p":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"任":{"docs":{},"意":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"也":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"查":{"docs":{},"找":{"docs":{},"树":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}},"伪":{"docs":{},"代":{"docs":{},"码":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"创":{"docs":{},"建":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"（":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"）":{"docs":{},"：":{"docs":{},"将":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"重":{"docs":{},"新":{"docs":{},"排":{"docs":{},"序":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"示":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.007159904534606206}}}},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"位":{"docs":{},"置":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"末":{"docs":{},"端":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"做":{"docs":{},"调":{"docs":{},"整":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"永":{"docs":{},"远":{"docs":{},"小":{"docs":{},"于":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"堆":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}},"立":{"docs":{},"数":{"docs":{},"学":{"docs":{},"模":{"docs":{},"型":{"docs":{},"来":{"docs":{},"描":{"docs":{},"述":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"利":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"这":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"所":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"堆":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"近":{"docs":{},"似":{"docs":{},"于":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"满":{"docs":{},"足":{"docs":{},"：":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"或":{"docs":{},"索":{"docs":{},"引":{"docs":{},"总":{"docs":{},"是":{"docs":{},"小":{"docs":{},"于":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"大":{"docs":{},"于":{"docs":{},"）":{"docs":{},"它":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"调":{"docs":{},"整":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"）":{"docs":{},":":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"组":{"docs":{},"合":{"docs":{},"是":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}}}},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"在":{"docs":{},"最":{"docs":{},"近":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"将":{"docs":{},"来":{"docs":{},"它":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"很":{"docs":{},"小":{"docs":{},"。":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{},"原":{"docs":{},"理":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"解":{"docs":{},"也":{"docs":{},"是":{"docs":{},"最":{"docs":{},"优":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"具":{"docs":{},"有":{"docs":{},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"即":{"docs":{},"满":{"docs":{},"足":{"docs":{},"最":{"docs":{},"优":{"docs":{},"化":{"docs":{},"原":{"docs":{},"理":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"串":{"docs":{},"和":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}},"子":{"docs":{},"串":{"docs":{},"—":{"docs":{},"要":{"docs":{},"求":{"docs":{},"子":{"docs":{},"串":{"docs":{},"一":{"docs":{},"定":{"docs":{},"连":{"docs":{},"续":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}},"没":{"docs":{},"有":{"docs":{},"键":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"i":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"在":{"docs":{},"(":{"2":{"docs":{},"*":{"docs":{},"i":{"docs":{},"+":{"2":{"docs":{},")":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}},"docs":{}}}}},"docs":{}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"在":{"docs":{},"（":{"2":{"docs":{},"*":{"docs":{},"i":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"docs":{}}}}}}}}}}}}}}},"若":{"docs":{},"b":{"docs":{},"是":{"docs":{},"空":{"docs":{},"树":{"docs":{},"，":{"docs":{},"则":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}},"x":{"docs":{},"小":{"docs":{},"于":{"docs":{},"b":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"于":{"docs":{},"b":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"查":{"docs":{},"找":{"docs":{},"成":{"docs":{},"功":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"意":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"不":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"均":{"docs":{},"大":{"docs":{},"于":{"docs":{},"它":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"不":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"均":{"docs":{},"小":{"docs":{},"于":{"docs":{},"它":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"；":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"地":{"docs":{},"分":{"docs":{},"区":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"可":{"docs":{},"以":{"docs":{},"降":{"docs":{},"低":{"docs":{},"到":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"法":{"docs":{},"：":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"把":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}},"法":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}},"通":{"docs":{},"常":{"docs":{},"堆":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}},"重":{"docs":{},"新":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"列":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"比":{"docs":{},"基":{"docs":{},"准":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"摆":{"docs":{},"在":{"docs":{},"基":{"docs":{},"准":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"比":{"docs":{},"基":{"docs":{},"准":{"docs":{},"值":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"摆":{"docs":{},"在":{"docs":{},"基":{"docs":{},"准":{"docs":{},"后":{"docs":{},"面":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"分":{"docs":{},"区":{"docs":{},"结":{"docs":{},"束":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"该":{"docs":{},"基":{"docs":{},"准":{"docs":{},"就":{"docs":{},"处":{"docs":{},"于":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"中":{"docs":{},"间":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"称":{"docs":{},"为":{"docs":{},"分":{"docs":{},"区":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"algorithm/quicksort.html":{"ref":"algorithm/quicksort.html","tf":0.002386634844868735}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.03481012658227848},"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.03862660944206009},"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877},"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.028037383177570093},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.038461538461538464}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}},"|":{"docs":{},"|":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.006329113924050633},"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.05405405405405406},"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876},"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.022099447513812154},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909},"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.02197802197802198}}}},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"地":{"docs":{},"访":{"docs":{},"问":{"docs":{},"某":{"docs":{},"种":{"docs":{},"树":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"乘":{"docs":{},"法":{"docs":{},"，":{"docs":{},"除":{"docs":{},"法":{"docs":{},"，":{"docs":{},"取":{"docs":{},"余":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"除":{"docs":{},"法":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"返":{"docs":{},"回":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}},"先":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}},"，":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"；":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"方":{"docs":{},"式":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}},"左":{"docs":{},"（":{"docs":{},"右":{"docs":{},"）":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"访":{"docs":{},"问":{"docs":{},"右":{"docs":{},"（":{"docs":{},"左":{"docs":{},"）":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"方":{"docs":{},"式":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"方":{"docs":{},"式":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"层":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}},"子":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}},"数":{"docs":{},"转":{"docs":{},"小":{"docs":{},"数":{"docs":{},"（":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"形":{"docs":{},"式":{"docs":{},"）":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},"步":{"docs":{},"骤":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"先":{"docs":{},"处":{"docs":{},"理":{"docs":{},"整":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"再":{"docs":{},"处":{"docs":{},"理":{"docs":{},"小":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"母":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"（":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}},"和":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186},"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"会":{"docs":{},"先":{"docs":{},"访":{"docs":{},"问":{"docs":{},"离":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"又":{"docs":{},"称":{"docs":{},"按":{"docs":{},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{},"借":{"docs":{},"助":{"docs":{},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},"：":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.0031645569620253164}},"之":{"docs":{"algorithm/binearysearch.html":{"ref":"algorithm/binearysearch.html","tf":0.00949367088607595}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"节":{"docs":{},"点":{"docs":{},"：":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}},"插":{"docs":{},"入":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"建":{"docs":{},"树":{"docs":{},"）":{"docs":{"algorithm/balancebineary.html":{"ref":"algorithm/balancebineary.html","tf":0.003205128205128205}}}}}}}}}},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"被":{"docs":{},"命":{"docs":{},"中":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"整":{"docs":{},"链":{"docs":{},"表":{"docs":{},"指":{"docs":{},"向":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"位":{"docs":{},"置":{"docs":{},"调":{"docs":{},"整":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"新":{"docs":{},"加":{"docs":{},"入":{"docs":{},"的":{"docs":{},"直":{"docs":{},"接":{"docs":{},"放":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"最":{"docs":{},"近":{"docs":{},"命":{"docs":{},"中":{"docs":{},"的":{"docs":{},"，":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"命":{"docs":{},"中":{"docs":{},"的":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"。":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"好":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"：":{"docs":{},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{"algorithm/LRUCache.html":{"ref":"algorithm/LRUCache.html","tf":0.004291845493562232}}}}}}}}}}}}},"如":{"1":{"5":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}},"docs":{}},"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007692307692307693},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}},"：":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384},"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"孤":{"docs":{},"岛":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"有":{"0":{"docs":{},"，":{"1":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}},"docs":{}}},"docs":{}}}}}},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"求":{"docs":{},"解":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"局":{"docs":{},"部":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"孤":{"docs":{},"岛":{"docs":{},"问":{"docs":{},"题":{"docs":{"algorithm/MNisland.html":{"ref":"algorithm/MNisland.html","tf":0.013513513513513514}}}}}}}},"\"":{"0":{"docs":{},"\"":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},".":{"5":{"docs":{},"\"":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}},"docs":{},"(":{"6":{"docs":{},")":{"docs":{},"\"":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}},"docs":{}}}},"1":{"2":{"docs":{},"\"":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}},",":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}},"docs":{}},"2":{"docs":{},"\"":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}},"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0213903743315508},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.016042780748663103}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}},"\"":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}},";":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"(":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}}}}},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}},"p":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009345794392523364}}}}},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{},",":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}}},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}},"%":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.03208556149732621},"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}},"d":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.058823529411764705}},"\"":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0106951871657754}}},")":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0106951871657754}}}},"=":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.015503875968992248}}}},"'":{"0":{"docs":{},"'":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}},"2":{"docs":{},"'":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}}}},"3":{"docs":{},"'":{"docs":{},")":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}},"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.04878048780487805}},"_":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"'":{"docs":{},":":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}}}}}}}},"a":{"docs":{},"'":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"b":{"docs":{},"'":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"z":{"docs":{},"'":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}},"其":{"docs":{},"实":{"docs":{},"每":{"docs":{},"次":{"docs":{},"挪":{"docs":{},"走":{"docs":{},"了":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"1":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},"docs":{}}}}}}}}}}},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}},"求":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"中":{"2":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}}},"docs":{}}}}}},"衍":{"docs":{},"生":{"docs":{},"问":{"docs":{},"题":{"1":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}},"2":{"docs":{},":":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}},"docs":{}}}}},"运":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"：":{"docs":{"algorithm/2power.html":{"ref":"algorithm/2power.html","tf":0.0053475935828877}}}}},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"拆":{"docs":{},"解":{"docs":{},"为":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}},"各":{"docs":{},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"然":{"docs":{},"数":{"docs":{},"n":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"小":{"docs":{},"于":{"docs":{},"n":{"docs":{},"的":{"docs":{},"质":{"docs":{},"数":{"docs":{},"；":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"2":{"docs":{},"是":{"docs":{},"质":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"2":{"docs":{},"的":{"docs":{},"倍":{"docs":{},"数":{"docs":{},"全":{"docs":{},"部":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"；":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}},"docs":{}}}}}}}}}}},"3":{"docs":{},"是":{"docs":{},"质":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"3":{"docs":{},"的":{"docs":{},"倍":{"docs":{},"数":{"docs":{},"全":{"docs":{},"部":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"；":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}},"筛":{"docs":{},"除":{"docs":{},"法":{"docs":{},":":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}},"继":{"docs":{},"续":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"是":{"5":{"docs":{},"，":{"docs":{},"把":{"5":{"docs":{},"的":{"docs":{},"倍":{"docs":{},"数":{"docs":{},"全":{"docs":{},"部":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"再":{"docs":{},"把":{"7":{"docs":{},"的":{"docs":{},"倍":{"docs":{},"数":{"docs":{},"全":{"docs":{},"部":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"不":{"docs":{},"断":{"docs":{},"筛":{"docs":{},"除":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"全":{"docs":{},"是":{"docs":{},"素":{"docs":{},"数":{"docs":{},"；":{"docs":{"algorithm/primeNumber.html":{"ref":"algorithm/primeNumber.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}},":":{"docs":{"algorithm/kListMerage.html":{"ref":"algorithm/kListMerage.html","tf":0.009345794392523364},"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077},"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}},"变":{"docs":{},"成":{"6":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}},"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}},"围":{"docs":{},"成":{"docs":{},"一":{"docs":{},"圈":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"依":{"docs":{},"次":{"docs":{},"报":{"docs":{},"数":{"docs":{},"，":{"docs":{},"第":{"docs":{},"m":{"docs":{},"个":{"docs":{},"人":{"docs":{},"自":{"docs":{},"杀":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"下":{"docs":{},"个":{"docs":{},"人":{"docs":{},"开":{"docs":{},"始":{"docs":{},"继":{"docs":{},"续":{"docs":{},"报":{"docs":{},"数":{"docs":{},"，":{"docs":{},"第":{"docs":{},"m":{"docs":{},"个":{"docs":{},"人":{"docs":{},"自":{"docs":{},"杀":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"谁":{"docs":{},"会":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"？":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"解":{"docs":{},"析":{"docs":{},"：":{"docs":{},"n":{"docs":{},"个":{"docs":{},"人":{"docs":{},"死":{"docs":{},"掉":{"docs":{},"一":{"docs":{},"个":{"docs":{"algorithm/jospher.html":{"ref":"algorithm/jospher.html","tf":0.030303030303030304}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},".":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}},"优":{"docs":{},"化":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"最":{"docs":{},"后":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"子":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"个":{"docs":{},"的":{"docs":{},"淘":{"docs":{},"汰":{"docs":{},"了":{"docs":{},"。":{"docs":{},"直":{"docs":{},"接":{"docs":{},"把":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"全":{"docs":{},"部":{"docs":{},"扔":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"，":{"docs":{},"两":{"docs":{},"套":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"划":{"docs":{},"分":{"docs":{},"后":{"docs":{},"的":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"可":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"求":{"docs":{},"解":{"docs":{},"。":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阶":{"docs":{},"段":{"docs":{},"：":{"docs":{},"按":{"docs":{},"照":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"或":{"docs":{},"空":{"docs":{},"间":{"docs":{},"特":{"docs":{},"征":{"docs":{},"，":{"docs":{},"把":{"docs":{},"问":{"docs":{},"题":{"docs":{},"分":{"docs":{},"为":{"docs":{},"若":{"docs":{},"干":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"。":{"docs":{},"在":{"docs":{},"划":{"docs":{},"分":{"docs":{},"时":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"推":{"docs":{},"式":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"推":{"docs":{},"的":{"docs":{},"终":{"docs":{},"止":{"docs":{},"条":{"docs":{},"件":{"docs":{},"或":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"解":{"docs":{},"局":{"docs":{},"部":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"合":{"docs":{},"成":{"docs":{},"原":{"docs":{},"来":{"docs":{},"解":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"解":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"解":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"分":{"docs":{},"成":{"docs":{},"若":{"docs":{},"干":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"设":{"docs":{},"有":{"docs":{},"n":{"docs":{},"件":{"docs":{},"物":{"docs":{},"品":{"docs":{},"，":{"docs":{},"每":{"docs":{},"件":{"docs":{},"价":{"docs":{},"值":{"docs":{},"记":{"docs":{},"为":{"docs":{},"p":{"docs":{},"i":{"docs":{},"，":{"docs":{},"每":{"docs":{},"件":{"docs":{},"体":{"docs":{},"积":{"docs":{},"记":{"docs":{},"为":{"docs":{},"v":{"docs":{},"i":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"大":{"docs":{},"容":{"docs":{},"积":{"docs":{},"为":{"docs":{},"v":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"的":{"docs":{},"背":{"docs":{},"包":{"docs":{},"，":{"docs":{},"求":{"docs":{},"装":{"docs":{},"入":{"docs":{},"物":{"docs":{},"品":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"价":{"docs":{},"值":{"docs":{},"。":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"f":{"docs":{},"[":{"docs":{},"i":{"docs":{},"，":{"docs":{},"j":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"取":{"docs":{},"i":{"docs":{},"件":{"docs":{},"物":{"docs":{},"品":{"docs":{},"填":{"docs":{},"充":{"docs":{},"一":{"docs":{},"个":{"docs":{},"容":{"docs":{},"积":{"docs":{},"为":{"docs":{},"j":{"docs":{},"的":{"docs":{},"背":{"docs":{},"包":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"价":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"解":{"docs":{},"就":{"docs":{},"是":{"docs":{},"f":{"docs":{},"[":{"docs":{},"n":{"docs":{},"，":{"docs":{},"v":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"]":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}},"无":{"docs":{},"后":{"docs":{},"效":{"docs":{},"性":{"docs":{},"：":{"docs":{},"某":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"确":{"docs":{},"定":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"受":{"docs":{},"这":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"以":{"docs":{},"后":{"docs":{},"的":{"docs":{},"决":{"docs":{},"策":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"；":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"即":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"独":{"docs":{},"立":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"下":{"docs":{},"一":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"决":{"docs":{},"策":{"docs":{},"中":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"多":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{},"到":{"docs":{},"。":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"解":{"docs":{},"码":{"docs":{},"方":{"docs":{},"案":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"两":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"来":{"docs":{},"确":{"docs":{},"定":{"docs":{},"决":{"docs":{},"策":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"。":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"框":{"docs":{},"架":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"决":{"docs":{},"策":{"docs":{},"并":{"docs":{},"写":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"：":{"docs":{},"因":{"docs":{},"为":{"docs":{},"决":{"docs":{},"策":{"docs":{},"和":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"有":{"docs":{},"天":{"docs":{},"然":{"docs":{},"的":{"docs":{},"联":{"docs":{},"系":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"就":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"上":{"docs":{},"一":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"和":{"docs":{},"决":{"docs":{},"策":{"docs":{},"来":{"docs":{},"导":{"docs":{},"出":{"docs":{},"本":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"和":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"：":{"docs":{},"将":{"docs":{},"问":{"docs":{},"题":{"docs":{},"发":{"docs":{},"展":{"docs":{},"到":{"docs":{},"各":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"时":{"docs":{},"所":{"docs":{},"处":{"docs":{},"于":{"docs":{},"的":{"docs":{},"各":{"docs":{},"种":{"docs":{},"客":{"docs":{},"观":{"docs":{},"情":{"docs":{},"况":{"docs":{},"用":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"表":{"docs":{},"示":{"docs":{},"出":{"docs":{},"来":{"docs":{},"。":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}},"贪":{"docs":{},"心":{"docs":{},"法":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}},"一":{"docs":{},"般":{"docs":{},"不":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"我":{"docs":{},"们":{"docs":{},"所":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"，":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"法":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"最":{"docs":{},"好":{"docs":{},"办":{"docs":{},"法":{"docs":{},"。":{"docs":{"algorithm/dynamic.html":{"ref":"algorithm/dynamic.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}},"p":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.013157894736842105}}},"s":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}}}},"z":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.004878048780487805}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},".":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{},"结":{"docs":{},"果":{"docs":{},"集":{"docs":{},"中":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"。":{"docs":{"algorithm/3Sum.html":{"ref":"algorithm/3Sum.html","tf":0.010416666666666666}}}}}}}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"点":{"docs":{},"：":{"docs":{},"处":{"docs":{},"理":{"docs":{},"空":{"docs":{},"格":{"docs":{},"，":{"docs":{},"确":{"docs":{},"定":{"docs":{},"正":{"docs":{},"数":{"docs":{},"还":{"docs":{},"是":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"整":{"docs":{},"型":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"转":{"docs":{},"整":{"docs":{},"数":{"docs":{"algorithm/Str2Int.html":{"ref":"algorithm/Str2Int.html","tf":0.024390243902439025}}}}}}}},"再":{"docs":{},"移":{"docs":{},"位":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}},"左":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}},"然":{"docs":{},"后":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}},"剩":{"docs":{},"余":{"docs":{},"的":{"3":{"docs":{},"，":{"docs":{},"再":{"docs":{},"通":{"docs":{},"过":{"docs":{},"减":{"docs":{},"法":{"docs":{},"，":{"docs":{},"把":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"的":{"docs":{},"位":{"docs":{},"不":{"docs":{},"上":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"5":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"上":{"docs":{},"代":{"docs":{},"码":{"docs":{},"比":{"docs":{},"较":{"docs":{},"好":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"关":{"docs":{},"注":{"docs":{},"正":{"docs":{},"负":{"docs":{},"数":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"，":{"docs":{},"移":{"docs":{},"位":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"得":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"4":{"docs":{},".":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}},"docs":{}}}}}}}},"docs":{}}}}}},"除":{"docs":{},"法":{"docs":{},"的":{"docs":{},"本":{"docs":{},"质":{"docs":{},"是":{"docs":{},"减":{"docs":{},"法":{"docs":{},"。":{"docs":{"algorithm/divide2Int.html":{"ref":"algorithm/divide2Int.html","tf":0.011627906976744186}}}}}}}}}}},"?":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124},"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.011049723756906077}}},"^":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"algorithm/frac2dec.html":{"ref":"algorithm/frac2dec.html","tf":0.007751937984496124}}}}}}},"“":{"docs":{},"o":{"docs":{},"”":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"被":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}}}}}},"方":{"docs":{},"法":{"1":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}}}}}}}}}}},"2":{"docs":{"algorithm/surroundedregion.html":{"ref":"algorithm/surroundedregion.html","tf":0.009009009009009009}}},"docs":{}}},"的":{"docs":{},"解":{"docs":{},"码":{"docs":{},"方":{"docs":{},"案":{"docs":{},"有":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"docs":{}}}}}}}},"种":{"docs":{},".":{"docs":{"algorithm/decodeways.html":{"ref":"algorithm/decodeways.html","tf":0.0055248618784530384}}}},"排":{"docs":{},"序":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"排":{"docs":{},"序":{"docs":{"algorithm/largestNumber.html":{"ref":"algorithm/largestNumber.html","tf":0.00909090909090909}}}}}}},"延":{"docs":{},"伸":{"docs":{},"问":{"docs":{},"题":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}},"树":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"algorithm/validatebinarysearchtree.html":{"ref":"algorithm/validatebinarysearchtree.html","tf":0.005494505494505495}}}}}}}},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"配":{"docs":{},"合":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"最":{"docs":{},"长":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"用":{"docs":{},"来":{"docs":{},"找":{"docs":{},"到":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"丢":{"docs":{},"掉":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{"algorithm/longestsubstringwithoutrepeatingchar.html":{"ref":"algorithm/longestsubstringwithoutrepeatingchar.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"length":64919},"corpusTokens":["!=","!stack.empty())","!stack.isempty())","\"","\"\");","\"\";","\"(\");","\"0\";","\"0.(6)\"","\"0.5\";","\"12\"","\"12\",","\"2\";","\"ab\"","\"abc\",","\"abcabcbb\",","\"b\",","\"bbbbb\",","\"count","\"currnum","\"factor","\"l\"","\"lowernum","\"pwke\"","\"pwwkew\",","\"wke\",","%","%=","%d","%d\"","%d)","&","&&","&arr[range.end]);","&height)","&p)","'","'0'","'0')","'2'","'3')","'__main__':","'a'","'b'","'z'","(!t)","(%d","((dividend","((n/factor)","(1","(12).","(a*math.pow(10,","(cur","(currnum,","(denomin","(dividend","(end","(f(n","(head","(highernum","(i","(ie,","(index","(int","(integer.parseint(s.substring(i,","(j","(l","(left","(len","(lowernum,","(min.next","(n","(n/factor)%10","(n/factor)*factor","(node.next","(precount,","(s","(s.charat(i","(start","(temp",")","*","**","*=","*x","*x,","*x;","*y","*y)","*y;","+","+1;","+=",",","..","...","/","//do","//while","//处理小数部分","//处理掉空格","//处理整数部分","//处理溢出","//定义d[i][j]","//直接平均可能会溢出，所以用这个算法","//递归版本","/10","0","0)","0))","0):","0,","0.","0:","0;","0?","0，","0，找到所有这样的唯一的组合。","1","1)","1))","1):","1);","1)／2)","1,","1.","10","100","100，","10;","10；","11,","12","12再移位，就变成了24，这样子就比15大了，所以，15","13,","13.","13],","15","15]","1:","1;","1]","1])","1],","1];","1][j","1][j])","1][matrix[0].length","1][substringlength2","1}","1。","1个人，并且编号往后移动了m的游戏重新开始，因此可以得到","1背包问题；","2","2)","2))","2,","2.","20，","2147483648)","25，","26","2;","2]","3","3,","3.","30,","34,","3sum","3，这时候","3，首先","4.","4],","5","5,","50，4","6","6)","6.","8,","9)","9534330","9534330.","9],","9，",":",";","=","=0;;level++)","==","==0)","=v[i];",">",">0",">0)",">=",">>",">data.key)",">lchild);",">lchild,",">left))",">left),",">left);",">left,",">left;",">rchild",">rchild);",">rchild,",">right",">right))",">right));",">right);",">right,",">right;","?","@overrid","[","[0","[1","[10,","[12,","[3,","[]","]","],","^","__name__","_rang","a,","a,b,c","a1","a[0..i]","a[i]","a[pivotindex]","a[right])","add","an","android","answer","append(s);","arr)","arr.length","arr;","arr[],","arr[end]);","arr[end];","arr[i]","arr[i];","arr[index])","arr[j]","arr[j];","arr[li])","arr[range.end])","arr[range.end];","array","arraylist();","arraylist<>();","arraylist>();","arrays.sort(nums);","arrays.sort(snums,","ask","atoi","atoi函数，把一个字符串转成整数。","avltree>","avltreenod","avltreenode(key,","avltreenode(t","avltreenode>","avl树失衡","avl树，任何节点的两个子树的高度最大差别为1，所以，也称为高度平衡二叉树。查找，插入和删除在平均最坏的情况下都是o(log","b","b)","b,","b;","b[0..j]的lcs，那么","b[j]);","be","be:","beginindex","beginindex;","below","bin(n)","binari","binary_search(arr,","binary_search(const","bitre","board","board)","board.length;","board[0].length;","bool","boolean","boolean[][]","boolean[row][cols];","break;","bst","c","c+1","c;","c=0","caches","cachesize)","cachesize;","carefulli","cases.","challenge,","char[]","charact","check(board,","class","cmax","cmp","col","col);","comp","comp);","comparator()","compare(listnod","compare(str","compareto(tupl","compute(char[]","concatenate(quicksort(less),","conquer），把一个序列分成两个子序列","consid","const","contain","continue;","convert","count","count)","count=0","count_binary_one(n):","count_one(12013)","count_one(n):","cur","cur.left;","cur.right;","currents","currentsize++;","currentsize;","currnum","currnum,","data.key)","decim","decod","def","den","den);","den;","denomin","denominator)","depth(root","depth(treenode*","depthleft","depthright","depthright)","determin","digits,","divid","divide(int","dividend,","divisor","divisor)","divisorl)","divisorl,","dp","dp[0]","dp[1]","dp[i","dp[i][j]","dp的解决方案，从后往前","dummi","e)","e;","element","elif","eliminate(n):","else:","encod","end","end)","end);","end,","end;","entri","entry();","example,","exce","exceed):","f(n)","f,","f;","f[j","f[j]","f[totv]);","factor","factor,","fals","false;","fib(n","fib(n)","fibonacci","find","first","first)","first.prev","first;","flag","flag.append(true)","flag[j]","follow","for(i","for(int","for(listnod","for(n","for(str","form","fraction","fractiontodecimal(int","front.","function","function,","gather","get(object","gird)","gird[0].length","give","given","greater","grid","grid.length","grid.length;","grid[0].length;","hashmap","hashmap<>();","hashset<>();","hashtabl","hashtable(i);","head","head++;","head;","heap","heap.add(min.next);","heap.add(n);","heap.peek();","heap.poll();","heapsort","heapsort(int[]","height","height(k1.right))","height(k2.right))","height(tree.left)","height;","hi","highernum","highernum)","highernum,","hint:","i)","i):","i);","i++;","i,","i;","if(","if(!isbalance(root","if(!isbalanced(root","if(!printnodeatlevel(root,","if(!root)","if((dividend","if(abs(depthleft","if(abs(left","if(arr[cmax]","if(arr[mid]","if(cmp","if(count","if(currents","if(dividend","if(divisor","if(first","if(flag[i]","if(grid.length","if(height(tree.right)","if(i","if(integer.max_valu","if(j","if(key","if(key.compareto(tree.right.key)","if(last","if(last.prev","if(left)","if(len","if(lists.length","if(map","if(map.containskey(num))","if(n","if(n==","if(nod","if(node.next","if(node.prev","if(num","if(numer","if(pr","if(ri","if(root","if(root.v","if(row","if(s.charat(i","if(s.charat(i)","if(size1","if(snums[0].charat(0)","if(start","if(str.length()","if(str1[i]","if(tmp","if(tre","in_order_traversal(root","in_order_traversal(treenode*","index","index);","index,","inord","inordertraversal(treenod","input","insert(avltreenod","insert(tree.right,","int","int(math.sqrt(n))","int[256];","int[]","int[][]","int[n+","int[n+1];","int[substringlength1","int_max(2147483647)","int_min(","integ","integer.","integer.max_value;","integer.min_valu","integer.min_value;","integers,","intend","intger","introduct","inverttree(root.left);","inverttree(root.right);","inverttree(treenod","is:","isbalance(treenode*","isbalanced(treenode*","isprime(int","isvalidbst(root,","isvalidbst(treenod","it.","j","j)","j++;","j,","j;","j==0);","j>0","josephus(n,","k","k)","k1","k1)","k1.height","k1.height)","k1.right","k1.right;","k1;","k2","k2)","k2.height","k2.height)","k2.left","k2.left;","k2;","k3)","k3.left","key","key)","key);","key,","key.compareto(tree.key);","key;","khey)","khey);","kth","kthsmallest(int[][]","kthsmallest(treenod","k个列表融合","k个有序列表融合成一个有序列表","largest","largestnumber(int[]","last","last.prev.next","last.prev;","last;","layer_traver(tree*","lchild","left","left))","left++;","left,","left;","len","len)","len);","len;","length","length(q)","lengthoflongestsubstring(str","less,","letter","level","level,","levelorder(treenod","levelorder2(treenod","li","linkedlist<>();","list","list)","list))","list.add(cur.val);","list.add(root.val);","list;","list>","listnod","listnode(0);","listnode(int","lists)","lists.add(list);","lists.length","lists;","llrotation(avltreenod","llrotation(k1.right);","llrotation(k3);","ll左单旋转","ll，","lo","long","long.max_value);","long.min_value,","longest","longestcommonsubsequ","longestcommonsubstr","lowernum","lowernum,","lrrotation(avltreenod","lrucach","lrucache(int","lr旋转","lr，rr，rl。","lsit;","lsits)","m","m)","m):","m*n的矩阵，1的周围如果都是0，那么我们说这个1是个孤岛","m[n]","map","map.get(num);","map.put(num,","mapping:","math.abs((long)denominator);","math.abs((long)numerator);","math.max(left,","math.max(opt[i+1][j],","matrix","matrix,","matrix.length;","matrix[0][0],","matrix[i][j]","matrix[matrix.length","matrix）","max","max(depth(root","max(dp[i][j","max(f[j],","max(height(k1.left),","max(height(k2.left),","max(height(k2.right),","max(left,","max_int","maxdepth(root.left);","maxdepth(root.right);","maxdepth(treenod","maxheapfiy(int","maxheapify(0,","maxheapify(cmax","maxheapify(i,","maxval","maxval)","memo","memo[i]","memo[n","memo[n]","merag","mergeklist(listnode[]","mergeklists(listnode[]","messag","mid","mid)","mid;","min","min.next","minval,","mod","movetohead(entri","movetohead(node);","mplement","mroot;","multipl","myatoi(str","n","n)","n+1):","n+1,","n/(factor*10)","n;","n]","new","new_range(int","new_range(left","new_range(range.start,","next;","node","node)","node);","node.next","node.next.prev","node.next;","node.prev","node.prev.next","node.prev;","node.remove(last.key);","node.valu","node;","nodes.get(key);","nodes.put(key,","nodes.remove(key);","nodes;","note","notes:","null","null)","null);","null,","null;","num","number","numdecoding(str","numdecodings(str","numer","numerator,","numislands(char[][]","nums)","nums.length","nums[i","nums[i]","nums[i];","n个人","n孤岛","n的矩阵，每一行每一列都是排好续的，从这个矩阵中找第k小的元素。","o","o(1)","o(logn)","o1,","o1.val","o2)","o2.val;","object","opt","opt[0][0];","opt[i+1][j+1]","opt[i][j","opt[i][j+1]);","opt[i][j]","order","p","p);","p[head]","p[size]","p[tail]","palindrom","partition(a,","pi);","pivot","pivotindex)","pivotlist","pivotlist,","pivotnewindex","pivotvalu","pleas","possibl","post_order_traversal(root","post_order_traversal(treenode*","pq","pre","pre_order_traversal(root","pre_order_traversal(treenode*","precount","precount,","prev;","print","printf(\"%d\",","printnodeatlevel(treenod","priorityqueu","priorityqueue();","priorityqueue<>(new","privat","problem","public","put(object","queue","queue.add(root);","quick_sort(int","quick_sort_recursive(arr,","quick_sort_recursive(int","quicksort(a,","quicksort(greater))","quicksort(q)","r)／2","r,","r.end","r.start","r;","r=n","r[p++]","rang","range(0,","range(2,","range(i+i,","range.end","range.end)","range.end);","range.start,","range;","rchild","re","recur","region","remove(object","removelast()","removelast();","repeat","requir","res.append(\")\");","res.append(\".\");","res.append(((numer","res.append(num","res.insert(index,","res.length());","res.length);","res.tostring();","respons","result","result.append(i)","retrun","return","return;","ri;","right","right)","right))","right);","right,","right;","rlrotation(avltreenod","rlrotation(tree);","rl旋转","root","root)","root,","root.left","root.left;","root.right","root.right;","root.val","root.val;","root;","row","row,","rrrotation(avltreenod","rrrotation(k1);","rrrotation(k3.left);","rrrotation(tree);","rr旋转","run","s","s)","s,","s.charat(0)","s.charat(i","s.charat(i)","s.charat(n","s.length()","s.length(),","s.length();","s.length;","s1","s2","s2.compareto(s1);","s;","sb.","sb.tostring();","search","searchbst(bitre","searchbst(t","search）","second","see","select","set","shortest","sign","size1","size2","smallest","snum","snums)","solut","someth","sort","sort()","specifi","specs).","stack","stack();","stack.add(cur);","stack.pop();","stack.push(root);","stack<>();","start","start)/2;","start,","start1","start2","static","statu","stck.pop();","storeindex","str)","str1,","str1.length;","str2)","str2.length;","str2[j])","string","string[nums.length];","stringbuild","stringbuilder();","stringbuilder)0;","struct","subsequenceand","substr","substring,","substring.","substringlength1","substringlength2","such","sum","surround","surround(char[][]","swap(&arr[left],","swap(0,","swap(a[pivotindex],","swap(cmax,","swap(int","t","t,","t1","t1)","t1;","t;","tail","tail++","tail++;","temp","temp;","that)","that.val;","this.arr","this.height","this.i","this.key","this.left","this.right","this.val","this.x","threesum(int[]","tmp","tmp;","total","travers","traversal）","tree","tree*","tree,","tree.right","tree;","treenod","tree）是指，一颗空树或者具有下列性质的二叉树","triplet","true):","true;","tupl","two","typedef","uniqu","up","us","v[i]]","vagu","val)","val;","valid","valu","value)","value;","var","visit","void","want","way","while(!heap.isempty())","while(cur","while(dividendl","while(i","while(j","while(lo","while(num","while(root","while(start","while(str.charat(index)","without","x","x&x","x)","x,","x;","x;}","x包围的o全部转成x","y,","y;","yourself","z","zero.","{","{null};","{val","||","}","});","};","​","—","“o”，我们把被","一个2d的网格，包含“x”","一个n","一个不包含在负数的数组，找到他们排列组合出来的最大的数字。","一定是","一条消息（message）按照下面的映射关系，采用数字的方式进行编码","上面的矩阵存在两个孤岛","不用传统的乘法，除法，取余操作，进行两个数的除法，如果溢出返回","不重复地访问某种树的所有节点的过程。","中序遍历（in","二分查找","二分查找（binari","二叉搜索树","二叉搜索树b中寻找x的过程为：","二叉搜索树（binari","二叉查找树","二叉树","二叉树层次遍历","二叉树翻转","二叉树遍历","二叉树遍历分两种","从前往后的dp","从数列中挑出一个元素，称为“基准（pivot）“。","代码实现","令l","令m(中间值元素)为","任意节点的左右子树也分别是二叉查找树；","优化","优化，通过一个map来记录慢指针最后出现的位置，这样子，就不用一个一个的淘汰了。直接把重复的字符前面的全部扔掉了，两套代码如下","伪代码","使得","例如","例子:","先序遍历（pre","先序遍历，中序遍历，后序遍历；","先访问子树，然后访问根的遍历方式","先访问左（右）子树，然后访问根，最后访问右（左）子树的遍历方式","先访问根，然后，访问子树的遍历方式","关键点：处理空格，确定正数还是负数，整型的最大和最小值","其实每次挪走了右边的1","再移位","分子","分层遍历二叉树","分数转小数（字符串形式），输入","分步骤处理，先处理整数部分，再处理小数部分，通过map来记录循环。","分母，输出","划分后的阶段一定要是有序的或者是可排序的，否则问题就无法求解。","划分阶段：按照问题的时间或空间特征，把问题分为若干阶段。在划分时","则搜索失败","创建最大堆（build_max_heap）：将堆的所有数据重新排序；","判断一个数字是不是2的幂","判断一个数是否是质数；","判断一个颗树是否是平衡二叉树","判断一棵树，是不是二叉查找树","动态规划","动态规划的过程：","动态规划问题的3个性质","双指针配合set，快指针用来判断最长字符串的末尾，慢指针用来找到重复的字符串，并且丢掉重复字符串前面的所有字符。","变成","变成6","可以拆解为","各一个自然数n，打印出所有小于n的质数；","后序遍历（post","和","和深度优先遍历不同，广度优先遍历会先访问离根节点最近的节点。二叉树的广度优先遍历又称按层次遍历。借助队列实现","因为2是质数，因此可以把2的倍数全部去掉；","因为3是质数，因此可以把3的倍数全部去掉；","围成一圈，然后依次报数，第m个人自杀，然后从下个人开始继续报数，第m个人自杀，最后谁会剩下？","图示","在一种有序数组中查找某一特定元素的搜索算法。搜索过程从数组的中间元素开始，如果中间元素正好是要查找的元素，则搜索过程结束；如果该特定元素大于或小于中间元素，则在数组大于或小于中间元素的那一半中查找，而且跟开始一样，从中间元素开始比较，如果在某一步骤数组为空，则代表找不到，这种搜索算法每次比较都使搜索范围缩小一半。","在有序矩阵中寻找第k小的元素","堆排序","堆排序（heapsort）","堆排序（heapsprt）：移除位在第一个数据的根结点，并做最大堆调整的递归算法；","堆排序（priorityqueue）","堆节点的访问：","如果am=t，搜索结束。","如果amt，令r为m","如果l","如果不限定每种物品的数量，则问题称为无界背包问题；","如果限定每种物品只能选择0个或1个，则称为0","如果限定物品j最多只能选择bj个，则问题称为有界背包问题；","子结点i的父节点在位置floor((i","字符串转整数","定义节点：","对于一个只有0，1组成的","对每一个子问题求解，得到子问题的局部最优解；","寻找边界条件：给出的状态转移方程是一个递推式，需要一个递推的终止条件或边界条件。","将堆的末端子结点做调整，使得子结点永远小于父节点；","小数字符串","左移一位","平衡二叉树","并且","并查集","并返回到步骤2","广度优先遍历","广度优先遍历：","延伸问题","建堆","建立数学模型来描述问题；","当一个位置被命中，通过调整链表指向，将该位置调整到链表头位置，新加入的直接放到链表头位置，这样，最近命中的，向链表头移动，没有命中的向链表后移动。","很简单","循环","快排","快排有两个竞争对手，分别是二叉搜索树和堆排序","快速排序","快速排序（quicksort），是一个典型的分治法（divid","把子问题的解局部最优解合成原来解问题的一个解；","把求解的问题分成若干子问题；","排序","插入节点（建树）","收集常见面试题，以及解法以及简单的原理介绍。","整数背包问题：设有n件物品，每件价值记为pi，每件体积记为vi，用一个最大容积为vmax的背包，求装入物品的最大价值。用一个数组f[i，j]表示取i件物品填充一个容积为j的背包的最大价值，那么这个问题的解就是f[n，vmax]","斐波那契数列","方法1，通过深度优先搜索","方法2","无后效性：某阶段的状态一旦确定，就不受这个状态以后的决策的影响；","时间复杂度","是指利用堆这种数据结构所设计的一种排序算法。堆是一种近似于完全二叉树的数据结构，并且满足：子结点的键值或索引总是小于（或者大于）它的父节点","最优化原理：如果问题的最优解包含的子问题的解也是最优的，那这个问题具有最优子结构，即满足最优化原理；","最大堆调整（max_heapify）:","最大的数字组合是","最近最久未使用，如果一个数据在最近一段时间没有被访问，那么在将来它被访问的可能性很小。","最长公共子串和最长公共子序列","最长公共子序列问题","最长公子串—要求子串一定连续","有两种解码方案","有重叠子问题：即子问题之间不独立，一个子问题在下一阶段决策中可能被多次使用到。","查找右子树；","树的前序遍历","根据相邻两个阶段的状态之间的关系来确定决策方法和状态转移方程。","比如","比如15","比如：","比较好的解决方案：双链表","求二进制中2的个数","没有重复字符的最长子字符串的大小。","没有键值相等的节点。","注意：结果集中不包含重复的。","深度优先遍历","深度优先遍历之","然后","然后剩余的3，再通过减法，把剩余的位不上，得到结果5，直接上代码比较好理解，一定要关注正负数问题。","然后，移位2次，得出结果4.","父节点i的右子节点的位置在(2*i+2)","父节点i的左子节点的位置在（2*i","的解码方案有\"2\"","相关的算法的基本框架","矩阵孤岛问题","确定决策并写出状态转移方程：因为决策和状态转移有天然的联系，状态转移就是根据上一阶段的状态和决策来导出本阶段的状态。","确定状态和状态变量：将问题发展到各个阶段时所处于的各种客观情况用不同的状态表示出来。","种.","空间复杂度","筛除法:","简单解析：n个人死掉一个","算法","算法步骤","约瑟夫环","给一个自然数n，打印出前n个质数；","给予一个包含n个带值元素的数组a","给出一条用数字编码过的消息，判断有多少种方式对他进行解码。","给定一个字符串，找到","给定的一个有n个整数的数据s，判断s中是否包含这样的元素","继续最小的数是5，把5的倍数全部去掉，因此类推再把7的倍数全部去掉，这样不断筛除，最后剩下的全是素数；","背包问题","自定义排序","若b是空树，则搜索失败，否则；","若x小于b的根结点的值，则搜索左子树；否则；","若x等于b的根结点的值，则查找成功；否则；","若任意节点的右子树不空，则右子树所有节点的值均大于它的根节点的值；","若任意节点的左子树不空，则左子树所有节点的值均小于它的根节点的值；","衍生问题1","衍生问题2:","解法2，二分查找，由于这个矩阵两端排序，因此最小的元素是左上角的元素，最大的元素是右下角的元素。","计算从0到n中包含数字1的个数：","计算机基础","说一个leetcode的问题吧：","质数的几个特点：除了2之外的质数一定是奇数，因为因数都是成对出现的","质数相关","贪心法","贪心法一般不能得到我们所要求的答案，一旦一个问题能通过贪心法来解决，那么贪心法一般是解决这个问题的最好办法。","运行完成之后，转化成下面这个数组","运行结果：","还有一个原地分区版本，空间复杂度可以降低到","这个矩阵有点像最小堆，那就先用堆的方法来解决一下，我们用优先级队列来构建堆。","这时候3","迭代法：","递归地把两个子序列排序。","递归法","通常堆是通过一维数组来实现的。","重新排序数列，所有比基准小的元素摆在基准前面，所有比基准值大的元素摆在基准后面。在这个分区结束之后，该基准就处于数列的中间位置。这个称为分区(partition)。","除法的本质是减法。","（kth"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction\n收集常见面试题，以及解法以及简单的原理介绍。\n\n算法\n二分查找\n快排-二叉查找树-堆排序\n二叉树遍历\n平衡二叉树\nLRUCache\nM * N孤岛\n判断一个数字是不是2的幂\n质数相关\nK个列表融合\n约瑟夫环\n动态规划\n\n\nAndroid\n计算机基础\n\n"},"algorithm/":{"url":"algorithm/","title":"算法","keywords":"","body":"算法\n"},"algorithm/erfen.html":{"url":"algorithm/erfen.html","title":"二分查找","keywords":"","body":"二分查找\n二分查找（binary search） 在一种有序数组中查找某一特定元素的搜索算法。搜索过程从数组的中间元素开始，如果中间元素正好是要查找的元素，则搜索过程结束；如果该特定元素大于或小于中间元素，则在数组大于或小于中间元素的那一半中查找，而且跟开始一样，从中间元素开始比较，如果在某一步骤数组为空，则代表找不到，这种搜索算法每次比较都使搜索范围缩小一半。\n算法步骤\n​    给予一个包含n个带值元素的数组A 使得 a1 \n1. 令L = 0， R=n-1。\n2. 如果L > R, 则搜索失败\n3. 令m(中间值元素)为 (L + R)／2\n4. 如果amT，令R为m-1 并返回到步骤2\n6. 如果am=T，搜索结束。\n时间复杂度 O(logn)\n空间复杂度 O(1)\n//递归版本\nint binary_search(const int arr[], int start, int end, int khey) {\n  if(start > end)\n    return -1;\n\n  int mid = start + (end - start)/2; //直接平均可能会溢出，所以用这个算法\n  if(arr[mid] > khey)\n    return binary_search(arr, start, mid - 1, khey);\n  if(arr[mid] \n//while 循环\nint binary_search(const int arr[], int start, int end, int khey) {\n  int mid;\n  while(start  khey) {\n      end = mid - 1;\n    } else \n      return mid;\n  }\n  return -1;\n}\n\n说一个leetcode的问题吧：\n在有序矩阵中寻找第K小的元素 （Kth Smallest Element in a sort Matrix）\n一个n * n的矩阵，每一行每一列都是排好续的，从这个矩阵中找第K小的元素。\n例如\nmatrix = [\n[1 , 5 ,  9],\n[10, 11, 13],\n[12, 13, 15]\n],\nK = 8,\nreturn 13.\n这个矩阵有点像最小堆，那就先用堆的方法来解决一下，我们用优先级队列来构建堆。\npublic class Solution {\n  public int kthSmallest(int[][] matrix, int k) {\n    int n = matrix.length;\n    PriorityQueue pq = new PriorityQueue();\n    for(int j = 0; j  {\n  int x, y, val;\n  public Tuple (int x, int y, int val) {\n    this.x = x;\n    this.y = y;\n    this.val = val;\n  }\n\n  @Override\n  public int compareTo(Tuple that) {\n    return this.val - that.val;\n  }\n}\n\n解法2，二分查找，由于这个矩阵两端排序，因此最小的元素是左上角的元素，最大的元素是右下角的元素。\npublic class Solution {\n  public int kthSmallest(int[][] matrix, int k) {\n    int lo = matrix[0][0], hi = matrix[matrix.length -1][matrix[0].length - 1] + 1;\n    while(lo = 0 && matrix[i][j] > mid) j--;\n        count += (j + 1);\n      }\n      if(count \n"},"algorithm/quicksort.html":{"url":"algorithm/quicksort.html","title":"快排-二叉查找树-堆排序","keywords":"","body":"快排-二叉查找树-堆排序\n快速排序\n快速排序（QuickSort），是一个典型的分治法（Divide and conquer），把一个序列分成两个子序列\n\n从数列中挑出一个元素，称为“基准（pivot）“。\n重新排序数列，所有比基准小的元素摆在基准前面，所有比基准值大的元素摆在基准后面。在这个分区结束之后，该基准就处于数列的中间位置。这个称为分区(partition)。\n递归地把两个子序列排序。\n\n伪代码\nfunction quicksort(q)\n    var list less, pivotList, greater\n    if length(q) = pivot then add x to greater\n      add pivot to pivotList\n      return concatenate(quicksort(less), pivotList, quicksort(greater))\n    }\n\n还有一个原地分区版本，空间复杂度可以降低到 O(logn)\nfunction partition(a, left, right, pivotIndex)\n    pivotValue = a[pivotIndex]\n    swap(a[pivotIndex], a[right])\n    storeIndex = left\n    for i form left to right -1\n        if a[i]  left\n        select a pivot value a[pivotIndex]\n        pivotNewIndex = partition(a, left, right, pivotIndex)\n        quicksort(a, left, pivotNewIndex -1)\n        quicksort(a, pivotNewIndex + 1, right)\n\n代码实现\n迭代法：\ntypedef struct _Range {\n  int start, end;\n} Range;\n\nRange new_Range(int s, int e) {\n  Range r;\n  r.start = s;\n  r.end = e;\n  return r;\n}\n\nvoid swap(int *x, int *y) {\n  int t = *x;\n  *x = *y;\n  *y = t;\n}\n\nvoid quick_sort(int arr[], const int len) {\n  if(len = range.end)\n      continue;\n    int mid = arr[range.end];\n    int left = range.start, right = range.end - 1;\n    while (left  mid && left = arr[range.end])\n      swap(&arr[left], &arr[range.end]);\n    else \n      left++;\n    r[p++] = new_Range(range.start, left-1);\n    r[p++] = new_Range(left + 1, range.end);\n  }\n}\n\n递归法\nvoid swap(int *x, int *y) {\n  int t = *x;\n  *x = *y;\n  *y = t;\n}\n\nvoid quick_sort_recursive(int arr[], int start, int end) {\n  if (start >= end)\n    return;\n  int mid = arr[end];\n  int left = start, right = end - 1;\n  while (left = mid && left = arr[end]);\n  else \n    left++;\n  if(left) {\n    quick_sort_recursive(arr, start, left -1);\n  }\n  quick_sort_recursive(arr, left + 1, end);\n}\n\nvoid quick_sort(int arr[], int len) {\n  quick_sort_recursive(arr, 0, len -1);\n}\n\n图示\n\n快排有两个竞争对手，分别是二叉搜索树和堆排序\n二叉搜索树\n二叉搜索树（Binary Search Tree）是指，一颗空树或者具有下列性质的二叉树\n\n若任意节点的左子树不空，则左子树所有节点的值均小于它的根节点的值；\n若任意节点的右子树不空，则右子树所有节点的值均大于它的根节点的值；\n任意节点的左右子树也分别是二叉查找树；\n没有键值相等的节点。\n\n二叉搜索树b中寻找x的过程为：\n\n若b是空树，则搜索失败，否则；\n若x等于b的根结点的值，则查找成功；否则；\n若x小于b的根结点的值，则搜索左子树；否则；\n查找右子树；\n\nStatus SearchBST(BiTree T, Key key, BiTree f, BiTree &p) {\n  if (!T) {\n    p = f;\n    return false;\n  }\n  else if(key == T->data.key) {\n    p = T;\n    return true;\n  }\n  else if(key data.key)\n    return SearchBST(T->lchild, key, T, p);\n  else \n    return SearchBST(T->rchild, key, T, p);\n}\n\n堆排序\n堆排序（Heapsort） 是指利用堆这种数据结构所设计的一种排序算法。堆是一种近似于完全二叉树的数据结构，并且满足：子结点的键值或索引总是小于（或者大于）它的父节点\n堆节点的访问：\n通常堆是通过一维数组来实现的。\n\n​  父节点i的左子节点的位置在（2*i + 1)\n​  父节点i的右子节点的位置在(2*i+2)\n​  子结点i的父节点在位置floor((i-1)／2)\n\n最大堆调整（Max_Heapify）: 将堆的末端子结点做调整，使得子结点永远小于父节点；\n创建最大堆（Build_Max_Heap）：将堆的所有数据重新排序；\n堆排序（HeapSprt）：移除位在第一个数据的根结点，并做最大堆调整的递归算法；\npublic class HeapSort {\n  private int[] arr;\n\n  public HeapSort(int[] arr) {\n    this.arr = arr;\n  }\n\n  public void sort() {\n    int len = arr.length - 1;\n    int beginIndex = (len - 1) >> 1;\n    for (int i = beginIndex; i >= 0; i--) {\n      maxHeapify(i, len);\n    }\n\n    for(int i = len; i > 0; i--) {\n      swap(0, i);\n      maxHeapify(0, i -1);\n    }\n  }\n\n  private void swap(int i, int j) {\n    int temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  private void maxHeapfiy(int index, int len) {\n    int li = (index  len) return;\n\n    if(ri  arr[li])\n      cMax = ri;\n    if(arr[cMax] > arr[index]) {\n      swap(cMax, index);\n      maxHeapify(cMax , len);\n    }\n  }\n}\n\n图示 — 建堆\n\n图示 堆排序\n\n"},"algorithm/binearysearch.html":{"url":"algorithm/binearysearch.html","title":"二叉树遍历","keywords":"","body":"二叉树遍历\n二叉树层次遍历\n不重复地访问某种树的所有节点的过程。\n二叉树遍历分两种\n\n深度优先遍历\n先序遍历，中序遍历，后序遍历；\n广度优先遍历\n\n深度优先遍历之 先序遍历（Pre-ORder Traversal）\n​    先访问根，然后，访问子树的遍历方式\nvoid pre_order_traversal(TreeNode* root) {\n  //Do something with root\n  if(root-> lchild != null) \n    pre_order_traversal(root->lchild);\n  if(root-> rchild != null)\n    pre_order_traversal(root->rchild);\n}\n\n深度优先遍历之 中序遍历（In-ORder Traversal）\n​    先访问左（右）子树，然后访问根，最后访问右（左）子树的遍历方式\nvoid in_order_traversal(TreeNode* root) {\n  if(root-> lchild != null\n    in_order_traversal(root->lchild);\n  //Do something with root\n  if(root-> rchild != null)\n    in_order_traversal(root->rchild);\n}\n\n深度优先遍历之 后序遍历（Post-ORder Traversal）\n​    先访问子树，然后访问根的遍历方式\nvoid post_order_traversal(TreeNode* root) {\n  if(root-> lchild != null) \n    post_order_traversal(root->lchild);\n  if(root-> rchild != null)\n    post_order_traversal(root->rchild\n  //Do something with root\n}\n\n广度优先遍历：\n​    和深度优先遍历不同，广度优先遍历会先访问离根节点最近的节点。二叉树的广度优先遍历又称按层次遍历。借助队列实现\nvoid Layer_Traver(tree* root) {\n  int head = 0, tail = 0;\n  tree* p[SIZE] = {NULL};\n  tree* tmp;\n  if(root != NULL) {\n    p[head] = root;\n    tail++;\n    //Do something with p[head]\n  } else {\n    return;\n  }\n  while (head left != NULL) {\n      p[tail] = tmp->left;\n      tail++\n      //Do something with p[head]\n    } \n    if(tmp->right != NULL) {\n      p[tail] = tmp->right;\n      tail++;\n      //Do something with p[head]\n    }\n    head++;\n  }\n  return;\n}\n\n分层遍历二叉树\npublic boolean printNodeAtLevel(TreeNode root, int level, List list) {\n  if(root == null || level \npublic int maxDepth(TreeNode root) {\n  if(root == null) {\n    return 0;\n  }\n  int left = 1 + maxDepth(root.left);\n  int right = 1 + maxDepth(root.right);\n  return Math.max(left, right);\n}\n\npublic List> levelOrder(TreeNode root) {\n  List> lists = new ArrayList>();\n  if(root == null)\n    return lists;\n  for (int level =0;;level++) {\n    List list = new ArrayList<>();\n       if(!printNodeAtLevel(root, level, list))\n      break;\n    lists.add(list);\n  }\n  return lists;\n}\n\npublic List> levelOrder2(TreeNode root) {\n  List> lists = new ArrayList>();\n  if(root == null) {\n    return lists;\n  }\n  int cur = 0, last = 1;\n  List queue = new ArrayList<>();\n  queue.add(root);\n  while(cur  list = new ArrayList<>();\n    while (cur \n二叉树\npublic List inorderTraversal(TreeNode root) {\n  List list = new ArrayList();\n\n  Stack stack = new Stack();\n\n  TreeNode cur = root;\n  while(cur != null || !stack.empty()) {\n    while(cur != null) {\n      stack.add(cur);\n      cur = cur.left;\n    }\n    cur = stck.pop();\n    list.add(cur.val);\n    cur = cur.right;\n  }\n  return lsit;\n}\n\n"},"algorithm/balancebineary.html":{"url":"algorithm/balancebineary.html","title":"平衡二叉树","keywords":"","body":"平衡二叉树\n平衡二叉树\nAVL树，任何节点的两个子树的高度最大差别为1，所以，也称为高度平衡二叉树。查找，插入和删除在平均最坏的情况下都是O(log n)\n定义节点：\npublic class AVLTree> {\n  private AVLTreeNode mRoot;\n  class AVLTreeNode> {\n    T key;\n    int height;\n    AVLTreeNode left;\n    AVLTreeNode right;\n\n    public AVLTreeNode(T key, AVLTreeNode left, AVLTreeNode right) {\n      this.key = key;\n      this.left = left;\n      this.right = right;\n      this.height = 0;\n    }\n  }\n}\n\nAVL树失衡 一定是 LL， LR，RR，RL。\n\n\nLL左单旋转\nprivate AVLTreeNode llRotation(AVLTreeNode k2) {\n  AVLTreeNode k1;\n\n  k1 = k2.left;\n  k2.left = k1.right;\n  k1.right = k2;\n\n  k2.height = max(height(k2.left), height(k2.right)) + 1;\n  k1.height = max(height(k1.left), k2.height) + 1;\n  return k1;\n}\n\n\nRR旋转\nprivate AVLTreeNode rrRotation(AVLTreeNode k1) {\n  AVLTreeNode k2;\n\n  k2 = k1.right;\n  k1.right = k2.left;\n  k2.left = k1;\n\n  k1.height = max(height(k1.left), height(k1.right)) + 1;\n  k2.height = max(height(k2.right), k1.height) + 1;\n  return k2;\n}\n\n\nLR旋转\nprivate AVLTreeNode lrRotation(AVLTreeNode k3) {\n  k3.left = rrRotation(k3.left);\n  return llRotation(k3);\n}\n\n\nRL旋转\nprivate AVLTreeNode rlRotation(AVLTreeNode k1) {\n  k1.right = llRotation(k1.right);\n  return rrRotation(k1);\n}\n\n\n插入节点（建树）\nprivate AVLTreeNode insert(AVLTreeNode tree, T key) {\n  if(tree == null) {\n    tree = new AVLTreeNode(key, null, null);\n  } else {\n    int cmp = key.compareTo(tree.key);\n    if(cmp  0) {\n      tree.right = insert(tree.right, key);\n      if(height(tree.right) - height(tree.left) == 2) {\n        if(key.compareTo(tree.right.key) > 0) \n          tree = rrRotation(tree);\n        else \n          tree = rlRotation(tree);\n      } \n    } \n  }\n  return tree;\n}\n\n判断一个颗树是否是平衡二叉树\nint depth(TreeNode* root) {\n  if(!root) return 0;\n  return 1 + max(depth(root->left), depth(root->right));\n}\n\nbool isBalance(TreeNode* root) {\n  if(!root) return true;\n  if(!isBalance(root->left)) return false;\n  if(!isBalance(root->right)) return false;\n\n  int depthLeft = depth(root->left);\n  int depthRight = depth(root->right);\n  if(abs(depthLeft - depthRight) > 1) \n    return false;\n  return true;\n}\n\nbool isBalanced(TreeNode* root, int &height) {\n  if(!root) return true;\n  int left = 0, right = 0;\n  if(!isBalanced(root->left, left)) return false;\n  if(!isBalanced(root->right, right)) return false;\n\n  if(abs(left - right) > 1) return false;\n  height = max(left, right) + 1;\n  retrun true;\n}\n\n二叉树翻转\npublic TreeNode invertTree(TreeNode root) {\n  if(root == null) {\n    return null;\n  }\n  root.left = invertTree(root.left);\n  root.right = invertTree(root.right);\n\n  TreeNode tmp = root.left;\n  root.left = root.right;\n  root.right = tmp;\n  return root;\n}\n\n"},"algorithm/LRUCache.html":{"url":"algorithm/LRUCache.html","title":"LRUCache","keywords":"","body":"LRUCache\n最近最久未使用，如果一个数据在最近一段时间没有被访问，那么在将来它被访问的可能性很小。\n比较好的解决方案：双链表 + hashtable\n当一个位置被命中，通过调整链表指向，将该位置调整到链表头位置，新加入的直接放到链表头位置，这样，最近命中的，向链表头移动，没有命中的向链表后移动。\npublic class LRUCache {\n  private int cacheSize;\n  private Hashtable nodes;\n  private int currentSize;\n  private Entry first;\n  private Entry last;\n\n  public LRUCache(int i) {\n    currentSize = 0;\n    cacheSize = i;\n    nodes = new Hashtable(i);\n  }\n\n  public Entry get(Object key) {\n    Entry node = nodes.get(key);\n    if(node != null) {\n      moveToHead(node);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  public void put(Object key, Object value) {\n    Entry node = nodes.get(key);\n\n    if(node == null) {\n      if(currentSize >= cacheSize) {\n        node.remove(last.key);\n        removeLast();\n      } else {\n        currentSize++;\n      }\n      node = new Entry();\n    }\n\n    node.value = value;\n    moveToHead(node);\n    nodes.put(key, node);\n  }\n\n  public void remove(Object key) {\n    Entry node = nodes.get(key);\n\n    if(node != null) {\n      if(node.prev != null) {\n        node.prev.next = node.next;\n      } \n      if (node.next != null) {\n        node.next.prev = node.prev;\n      }\n      if(last == node) {\n        last == node.prev;\n      }\n      if(first == node) {\n        first = node.next;\n      }\n    }\n    nodes.remove(key);\n  }\n\n  private void removeLast() {\n    if(last != null) {\n      if(last.prev != null)\n        last.prev.next = null;\n      else \n        first = null;\n      last = last.prev;\n    }\n  }\n\n  private void moveToHead(Entry node) {\n    if(node == first)\n      return;\n    if(node.prev != null) \n      node.prev.next = node.next;\n    if(node.next != null) \n      node.next.prev = node.prev;\n    if(last == node) \n      last = node.prev;\n\n    if(first != null) {\n      node.next = first;\n      first.prev = node;\n    }\n    first = node;\n    node.prev = null;\n    if(last == null) \n      last = first;\n  }\n\n\n  class Entry {\n    Entry prev;\n    Entry next;\n    Object value;\n    Object key;\n  }\n}\n\n"},"algorithm/MNisland.html":{"url":"algorithm/MNisland.html","title":"M * N孤岛","keywords":"","body":"M * N孤岛\n矩阵孤岛问题\n对于一个只有0，1组成的 M*N的矩阵，1的周围如果都是0，那么我们说这个1是个孤岛\n[\n1, 0, 0, 0, 0\n0, 0, 1, 0, 0\n0, 1, 1, 0, 0\n0, 1, 0, 0, 0\n]\n上面的矩阵存在两个孤岛\npublic int numIslands(char[][] gird) {\n  if(grid.length == 0 || gird[0].length == 0 || grid == null) return 0;\n\n  int rows = grid.length;\n  int cols = grid[0].length;\n  int sum = 0;\n  boolean[][] visited = new boolean[row][cols];\n  for(int i = 0; i = grid.length || i = gird[0].length || j \n"},"algorithm/2power.html":{"url":"algorithm/2power.html","title":"判断一个数字是不是2的幂","keywords":"","body":"判断一个数字是不是2的幂\n很简单 x&x-1 == 0  \n衍生问题1\n计算从0到N中包含数字1的个数：\ndef count_one(n):\n    count=0\n    factor = 1\n    lowerNum = 0\n    currNum = 0\n    higherNum = 0\n    while ((n/factor) > 0):\n        lowerNum = n - (n/factor)*factor\n        currNum = (n/factor)%10\n        higherNum = n/(factor*10)\n        print \"lowerNum is %d currNum is %d higherNum is %d \" % (lowerNum, currNum, higherNum)\n        precount = count\n        if currNum == 0:\n            count = count + higherNum * factor\n            print \"currNum is 0 count is (%d + %d * %d) = %d\" % (precount, higherNum, factor, count)\n        elif currNum == 1:\n            count = count + higherNum * factor + lowerNum + 1\n            print \"currNum is 1 count is (%d + %d * %d + %d + 1) = %d \" % (precount, higherNum, factor, lowerNum, count)\n        else:\n            count = count + (higherNum + 1) * factor\n            print \"currNum is %d count is (%d + (%d + 1) * %d) = %d \" % (currNum, precount, higherNum, factor, count)\n        factor = factor * 10\n        print \"factor is %d \" % factor\n\n    print \"count is %d\" % count \n\n\n\n\n\n\nif __name__ == '__main__':\n    count_one(12013)\n\n运行结果：\n\n衍生问题2:\n求二进制中2的个数\ndef count_binary_one(n):\n    c=0\n    while n != 0:\n        print bin(n)\n        n = n & (n -1)\n        c = c+1\n    print c\n\n其实每次挪走了右边的1\n"},"algorithm/primeNumber.html":{"url":"algorithm/primeNumber.html","title":"质数相关","keywords":"","body":"质数相关\n\n判断一个数是否是质数；\n各一个自然数N，打印出所有小于N的质数；\n给一个自然数N，打印出前N个质数；\n\n质数的几个特点：除了2之外的质数一定是奇数，因为因数都是成对出现的 比如 \n100 可以拆解为 1  100， 2  50，4  25， 5  20， 10 * 10；\nboolean isPrime(int n) {\n  if(n \n筛除法:\n因为2是质数，因此可以把2的倍数全部去掉；\n因为3是质数，因此可以把3的倍数全部去掉；\n继续最小的数是5，把5的倍数全部去掉，因此类推再把7的倍数全部去掉，这样不断筛除，最后剩下的全是素数；\ndef eliminate(N):\n    flag = []\n    result = []\n    for i in range(0, N+1):\n        flag.append(True)\n    exceed = int(math.sqrt(N))\n    for i in range(2, exceed):\n        if(flag[i] == True):\n            for j in range(i+i, N+1, i):\n                flag[j] = False\n\n    for i in range(2, N+1):\n        if(flag[i] == True):\n            result.append(i)\n    print result\n\n"},"algorithm/kListMerage.html":{"url":"algorithm/kListMerage.html","title":"K个列表融合","keywords":"","body":"K个列表融合\nK个有序列表融合成一个有序列表\npublic class ListNode {\n  int val;\n  ListNode next;\n  ListNode(int x) {val = x;}\n}\n\nmerage sort\nListNode dummy = new ListNode(0);\npublic ListNode mergeKList(ListNode[] lists) {\n  if(lists.length == 0) return null;\n  int i = 0;\n  int j = lists.length -1;\n  while(j != 0) {\n    while(i \n堆排序（PriorityQueue）\npublic ListNode mergeKLists(ListNode[] lists) {\n  PriorityQueue heap = new PriorityQueue<>(new Comparator() {\n    @Override\n    public int compare(ListNode o1, ListNode o2) {\n      return o1.val - o2.val;\n    }\n  });\n  for(ListNode n : lsits) {\n    if(n != null) {\n      heap.add(n);\n    }\n  }\n\n  ListNode head = heap.peek();\n\n  while(!heap.isEmpty()) {\n    ListNode min = heap.poll();\n    if (min.next != null) {\n      heap.add(min.next);\n    }\n    min.next = heap.peek();\n  }\n  return head;\n}\n\n"},"algorithm/jospher.html":{"url":"algorithm/jospher.html","title":"约瑟夫环","keywords":"","body":"约瑟夫环\nn个人 围成一圈，然后依次报数，第m个人自杀，然后从下个人开始继续报数，第m个人自杀，最后谁会剩下？\n简单解析：n个人死掉一个 变成 n-1个人，并且编号往后移动了m的游戏重新开始，因此可以得到\nf(n) = (f(n - 1) + m) mod n\ndef josephus(n, m):\n    s = 0;\n    for i in range(2, n + 1):\n        s = (s + m) % i\n    print s\n\n"},"algorithm/dynamic.html":{"url":"algorithm/dynamic.html","title":"动态规划","keywords":"","body":"动态规划\n动态规划问题的3个性质\n\n最优化原理：如果问题的最优解包含的子问题的解也是最优的，那这个问题具有最优子结构，即满足最优化原理；\n无后效性：某阶段的状态一旦确定，就不受这个状态以后的决策的影响；\n有重叠子问题：即子问题之间不独立，一个子问题在下一阶段决策中可能被多次使用到。\n\n动态规划的过程：\n\n划分阶段：按照问题的时间或空间特征，把问题分为若干阶段。在划分时 划分后的阶段一定要是有序的或者是可排序的，否则问题就无法求解。\n确定状态和状态变量：将问题发展到各个阶段时所处于的各种客观情况用不同的状态表示出来。\n确定决策并写出状态转移方程：因为决策和状态转移有天然的联系，状态转移就是根据上一阶段的状态和决策来导出本阶段的状态。  根据相邻两个阶段的状态之间的关系来确定决策方法和状态转移方程。\n寻找边界条件：给出的状态转移方程是一个递推式，需要一个递推的终止条件或边界条件。\n\n相关的算法的基本框架\n例子:\n斐波那契数列\nfunction fib(n)\n    if n = 0 or n = 1\n        return n\n     return fib(n - 1) + fib(n - 2)\n\n优化\narray map [0 .. n] = { 0-> 0. 1 -> 1}\nfib(n)\n    if(map m does not contain key n)\n      m[n] = fib(n - 1) + fib(n - 2)\n    return m[n]\n\n背包问题\n整数背包问题：设有n件物品，每件价值记为Pi，每件体积记为Vi，用一个最大容积为Vmax的背包，求装入物品的最大价值。用一个数组f[i，j]表示取i件物品填充一个容积为j的背包的最大价值，那么这个问题的解就是f[n，Vmax]\nfor(int i = 1; i =v[i]; j--)\n    f[j] = max(f[j], f[j - v[i]] + pi);\nprintf(\"%d\", f[totv]);\n\n如果限定每种物品只能选择0个或1个，则称为0-1背包问题；\n如果限定物品j最多只能选择bj个，则问题称为有界背包问题；\n如果不限定每种物品的数量，则问题称为无界背包问题；\n贪心法\n贪心法一般不能得到我们所要求的答案，一旦一个问题能通过贪心法来解决，那么贪心法一般是解决这个问题的最好办法。\n\n建立数学模型来描述问题；\n把求解的问题分成若干子问题；\n对每一个子问题求解，得到子问题的局部最优解；\n把子问题的解局部最优解合成原来解问题的一个解；\n\n最长公共子串和最长公共子序列\n最长公子串—要求子串一定连续\npublic class LongestCommonSubString {\n  public static int compute(char[] str1, char[] str2) {\n    int size1 = str1.length;\n    int size2 = str2.length;\n\n    if(size1 == 0 || size2 == 0) return 0;\n\n    int start1 = -1;\n    int start2 = -1;\n\n    int longest = 0;\n\n    for (int i = 0; i \n最长公共子序列问题\n//定义d[i][j] = A[0..i] B[0..j]的LCS，那么\n0       (i == 0 并且 j==0);\ndp[i][j] = dp[i-1][j-1] + 1    (i >0 && j > 0, && A[i] = B[j]);\n        = max(dp[i][j-1], dp[i-1][j]) (i >0 && j>0 && A[i] != B[j]);\n\npublic class LongestCommonSubsequence {\n  public static int compute(char[] str1, char[] str2) {\n    int subStringLength1 = str1.length;\n    int subStringLength1 = str2.length;\n\n    int[][] opt = new int[subStringLength1 + 1][subStringLength2 + 1];\n\n    for(int i = subStringLength1 -1; i >= 0; i--) {\n      for (int j = subStringLength2 -1; j >= 0; j--) {\n        if(str1[i] == str2[j]) {\n          opt[i][j] = opt[i+1][j+1] +1;\n        } else {\n          opt[i][j] = Math.max(opt[i+1][j], opt[i][j+1]);\n        }\n      }\n    }\n\n    int i = 0, j = 0;\n\n    while(i = opt[i][j + 1])\n        i++;\n      else \n        j++;\n\n    }\n    return opt[0][0];\n\n  }\n}\n\n"},"algorithm/3Sum.html":{"url":"algorithm/3Sum.html","title":"3Sum","keywords":"","body":"3Sum\n3Sum\n\nGiven an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\n给定的一个有n个整数的数据S，判断S中是否包含这样的元素 a,b,c a + b + c = 0，找到所有这样的唯一的组合。\n注意：结果集中不包含重复的。\nFor example, given array S = [-1, 0, 1, 2, -1, -4],\nA solution set is:\n[\n [-1, 0, 1],\n [-1, -1, 2]\n]\n\n\npublic List> threeSum(int[] nums) {\n     Arrays.sort(nums);\n        List> res = new LinkedList<>();\n        for (int i = 0; i  0 && nums[i] != nums[i - 1]) ) {\n                int lo = i + 1, hi = nums.length - 1, sum = 0 - nums[i];\n                while(lo \n"},"android/":{"url":"android/","title":"Android","keywords":"","body":"Android\n"},"base/":{"url":"base/","title":"计算机基础","keywords":"","body":"计算机基础\n"},"algorithm/Str2Int.html":{"url":"algorithm/Str2Int.html","title":"String to Intger","keywords":"","body":"String to Intger\nstring to integer\n\natoi函数，把一个字符串转成整数。\n\n关键点：处理空格，确定正数还是负数，整型的最大和最小值 INT_MAX(2147483647) INT_MIN(-2147483648)\npublic int myAtoi(String str) {\n  int index = 0, sign = 1, total = 0;\n\n  if(str.length() == 0) return 0;\n  //处理掉空格\n  while(str.charAt(index) == ' ' && index  9) break;\n    //处理溢出\n    if(Integer.MAX_VALUE /10 \n"},"algorithm/divide2Int.html":{"url":"algorithm/divide2Int.html","title":"Divide Two Integers","keywords":"","body":"Divide Two Integers\nDivide Two Integers\n\n不用传统的乘法，除法，取余操作，进行两个数的除法，如果溢出返回 MAX_INT\n\n除法的本质是减法。\n比如15 和 3，首先 15 - 3 = 12 这时候3 左移一位 变成6 15 -6 = 9， 然后 6 再移位 12 15 - 12 = 3，这时候 12再移位，就变成了24，这样子就比15大了，所以，15 -12 然后，移位2次，得出结果4. 然后剩余的3，再通过减法，把剩余的位不上，得到结果5，直接上代码比较好理解，一定要关注正负数问题。\npublic int divide(int dividend, int divisor) {\n  if(divisor == 0 || (dividend == Integer.MIN_VALUE && divisor == -1)) return Integer.MAX_VALUE;\n  if((dividend == Integer.MIN_VALUE && divisor == 1)) return Integer.MIN_VALUE;\n\n  if(dividend == 0) return 0;\n\n  int sign = ((dividend = divisorl) {\n    long temp = divisorl, multiple = 1;\n    while(dividendl >= (temp \n"},"algorithm/frac2dec.html":{"url":"algorithm/frac2dec.html","title":"Fraction to Recurring Decimal","keywords":"","body":"Fraction to Recurring Decimal\nFraction to Recurring Decimal\n\n分数转小数（字符串形式），输入 分子 分母，输出 小数字符串\nGiven numerator = 1, denominator = 2, return \"0.5\";\nGiven numerator = 2, denominator = 1, return \"2\";\nGiven numerator = 2, denominator = 3, return \"0.(6)\"\n\n分步骤处理，先处理整数部分，再处理小数部分，通过map来记录循环。\npublic String fractionToDecimal(int numerator, int denominator) {\n  if(numerator == 0) return \"0\";\n  StringBuilder result = new StringBuilder();\n\n  res.append(((numerator >0) ^ (denominator > 0)) ? \"-\" : \"\");\n  long num = Math.abs((long)numerator);\n  long den = Math.abs((long)denominator);\n\n  //处理整数部分\n  res.append(num / den);\n  num %= den;\n\n  if(num == 0) {\n    return res.toString();\n  }\n\n  res.append(\".\");\n\n  //处理小数部分\n  HashMap map = new HashMap<>();\n  map.put(num, res.length());\n  while(num != 0) {\n    num *= 10;\n    res.append(num / den);\n    num %= den;\n    if(map.containsKey(num)) {\n      int index = map.get(num);\n      res.insert(index, \"(\");\n      res.append(\")\");\n      break;\n    } else {\n      map.put(num, res.length);\n    }\n  }\n  return res.toString();\n}\n\n"},"algorithm/surroundedregion.html":{"url":"algorithm/surroundedregion.html","title":"Surrounded Regions","keywords":"","body":"Surrounded Regions\nSurrounded Regions\n\n一个2D的网格，包含“X” 和 “O”，我们把被 X包围的O全部转成X\n例如\nX X X X\nX O O X\nX X O X\nX O X X\n运行完成之后，转化成下面这个数组\nX X X X\nX X X X\nX X X X\nX O X X\n\n方法1，通过深度优先搜索\npublic void surround(char[][] board) {\n  int i, j;\n  int row = board.length;\n  if(row == 0) return;\n  int col = board[0].length;\n\n  for(i = 0; i  1) {\n      check(board, i, col - 1, row, col);\n    }\n  }\n\n  for (j = 1; j  1)\n      check(board, row - 1, j, row, col);\n  }\n\n  for(i = 0; i  1) check(board, i -1, j, row, col);\n    if(j > 1) check(board, i, j -1, row, col);\n    if(i + 1\n方法2 并查集\n"},"algorithm/decodeways.html":{"url":"algorithm/decodeways.html","title":"Decode ways","keywords":"","body":"Decode ways\nDecode ways\n\n一条消息（message）按照下面的映射关系，采用数字的方式进行编码\n'A' -> 1\n'B' -> 2\n...\n'Z' -> 26\n给出一条用数字编码过的消息，判断有多少种方式对他进行解码。\n比如：\n\"12\", 有两种解码方案   \"AB\" (1 2) or  \"L\" (12).\n\"12\" 的解码方案有\"2\" 种.\n\nDP的解决方案，从后往前\npublic int numDecodings(String s) {\n  int n = s.length;\n  if(n== 0) return 0;\n\n  int memo = new int[n+1];\n  memo[n] = 1;\n  memo[n - 1] = s.charAt(n - 1) != '0' ? 1 : 0;\n\n  for (int i = n -2; i >= 0; i--) {\n    if(s.charAt(i) == '0') continue;\n    else memo[i] =\n      (Integer.parseInt(s.substring(i, i + 2)) \n从前往后的DP\npublic int numDecodings(String s) {\n  if(s == null || s.length() ==0) {\n    return 0;\n  }\n  int n = s.length();\n  int[] dp = new int[n+ 1];\n  dp[0] = 1;\n  dp[1] = s.charAt(0) != '0' ? 1 : 0;\n  for (int i = 2; i = 1 && first = 10 && second \nFibonacci\npublic int numDecoding(String s) {\n  if(s == null || s.length() '3') {\n        return 0;\n      }\n      b = 0;\n    }\n    if(s.charAt(i -1) > '2' || (s.charAt(i-1) == '2' && s.charAt(i) > 6)\n       || s.charAt(i - 1) == '0') {\n         a = 0;\n       }\n    c = a + b;\n    a = b;\n    b = c;\n  }\n  return b;\n}\n\n"},"algorithm/largestNumber.html":{"url":"algorithm/largestNumber.html","title":"Largest number","keywords":"","body":"Largest number\nLargest number\n\n一个不包含在负数的数组，找到他们排列组合出来的最大的数字。\n比如  [3, 30, 34, 5, 9], 最大的数字组合是 9534330.\n\n排序\npublic String largestNumber(int[] nums) {\n  if(nums == null || nums.length == 0) {\n    return \"\";\n  }\n  String sNums = new String[nums.length];\n  for(int i = 0; i  comp = new Comparator() {\n    @Override\n    public int compare(String s, String t1) {\n      String s1 = s + t1;\n      String s2 = t1 + s;\n      return s2.compareTo(s1);\n    }\n  };\n\n  Arrays.sort(sNums, comp);\n\n  if(sNums[0].charAt(0) == '0') return \"0\";\n\n  StringBuilder result = new StringBuilder)0;\n  for(String s : sNums) {\n    sb. append(s);\n  }\n  return sb.toString();\n\n}\n\n自定义排序\npublic String largestNumber(int[] nums) {\n  int n;\n  for(n = 0; n  b) return false;\n  else \n    return (a*Math.pow(10, j) + b) \n"},"algorithm/validatebinarysearchtree.html":{"url":"algorithm/validatebinarysearchtree.html","title":"Validate Binary Search Tree","keywords":"","body":"Validate Binary Search Tree\nValidate Binary Search Tree\n\n判断一棵树，是不是二叉查找树\n\npublic boolean isValidBST(TreeNode root) {\n  return isValidBST(root, Long.MIN_VALUE, Long.MAX_VALUE);\n}\n\npublic boolean isValidBST(TreeNode root, long minVal, long maxVal) {\n  if(root == null) return true;\n  if(root.val >= maxVal || root.val \n延伸问题 树的前序遍历\n\nBinary Tree Inorder Traversal\npublic List inorderTraversal(TreeNode root) {\n  List list = new ArrayList<>();\n  if(root == null) return list;\n  Stack stack = new Stack<>();\n  while(root != null || !stack.empty()) {\n    while(root != null) {\n      stack.push(root);\n      root = root.left;\n    }\n    root = stack.pop();\n    list.add(root.val);\n    root = root.right;\n  }\n  return list;\n}\n\n\nKth Smallest Element in BST\npublic int kthSmallest(TreeNode root, int k) {\n  Stack stack = new Stack<>();\n  while(root != null || !stack.isEmpty()) {\n    while(root != null) {\n      stack.push(root);\n      root = root.left;\n    }\n    root = stack.pop();\n    if(--k == 0) break;\n    root = root.right;\n  }\n  return root.val;\n}\n\n\nValidate Binary Search Tree\npublic boolean isValidBST(TreeNode root) {\n  if(root == null) return true;\n  Stack stack = new Stack<>();\n  TreeNode pre = null;\n  while(root != null || !stack.isEmpty()) {\n    while(root != null) {\n      stack.push(root);\n      root = root.left;\n    }\n    root = stack.pop();\n    if(pre != null && root.val \n\n\n"},"algorithm/longestsubstringwithoutrepeatingchar.html":{"url":"algorithm/longestsubstringwithoutrepeatingchar.html","title":"Longest Substring Without Repeating Characters","keywords":"","body":"Longest Substring Without Repeating Characters\nLongest Substring Without Repeating Characters\n\n给定一个字符串，找到 没有重复字符的最长子字符串的大小。\n比如：\nGiven \"abcabcbb\", the answer is \"abc\", which the length is 3.\nGiven \"bbbbb\", the answer is \"b\", with the length of 1.\nGiven \"pwwkew\", the answer is \"wke\", with the length of 3.\n\n双指针配合set，快指针用来判断最长字符串的末尾，慢指针用来找到重复的字符串，并且丢掉重复字符串前面的所有字符。\npublic int lengthOfLongestSubstring(String s) {\n  int i = 0, j = 0, max = 0;\n  Set set = new HashSet<>();\n  while (j \n优化，通过一个map来记录慢指针最后出现的位置，这样子，就不用一个一个的淘汰了。直接把重复的字符前面的全部扔掉了，两套代码如下\npublic int lengthOfLongestSubstring(String s) {\n  int n = s.length(), ans = 0;\n  Map map = new HashMap<>();\n  for(int j = 0, i = 0; j \npublic int lengthOfLongestSubstring(String s) {\n  int n = s.length(), ans = 0;\n  int[]  index = new int[256];\n  for(int j = 0, i = 0; j \n"},"algorithm/longestpalindromicsubstring.html":{"url":"algorithm/longestpalindromicsubstring.html","title":"Longest Palindromic Substring","keywords":"","body":"Longest Palindromic Substring\n"},"algorithm/shortestPalindrome.html":{"url":"algorithm/shortestPalindrome.html","title":"Shortest Palindrome","keywords":"","body":"Shortest Palindrome\n"}}}